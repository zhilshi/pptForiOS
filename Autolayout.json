{"slides":[{"components":[{"TextBox":{},"x":85,"y":336,"scale":{"x":1,"y":1},"type":"TextBox","text":"<font color=\"#eeeeee\" face=\"Abril Fatface, cursive\">Coding With Auto Layout &nbsp;</font><br>","size":72,"selected":false},{"TextBox":{},"x":802,"y":697,"scale":{"x":1,"y":1},"type":"TextBox","text":"<font color=\"#eeeeee\">zhil.shi 2015.6.12</font><br>","size":22,"selected":false}],"z":0,"impScale":3,"rotateX":0,"rotateY":0,"rotateZ":0,"index":0,"selected":false,"active":true,"x":180,"y":180,"background":"bg-transparent","markdown":"","surface":"bg-custom-000000"},{"components":[{"TextBox":{},"x":480,"y":40,"scale":{"x":1,"y":1},"type":"TextBox","text":"<font color=\"#eeeeee\" face=\"Abril Fatface, cursive\">目录</font><br>","size":32,"selected":false},{"TextBox":{},"x":27,"y":101,"scale":{"x":1,"y":1},"type":"TextBox","size":24,"text":"<ul><li><span style=\"color: rgb(255, 255, 255); font-family: Lato; line-height: normal;\">目前及将来iOS开发需要面临的界面适配问题</span><br></li></ul><font color=\"#ffffff\" face=\"Lato\"><br></font><ul><li><span style=\"color: rgb(255, 255, 255); font-family: Lato; line-height: normal;\">AutoLayout 介绍</span><br></li></ul><div><font color=\"#ffffff\" face=\"Lato\">&nbsp; &nbsp; &nbsp; &nbsp;</font><a href=\"http://\"><br></a></div><div><font color=\"#ffffff\" face=\"Lato\"><br></font></div><div><font color=\"#ffffff\" face=\"Lato\"><br></font></div><div><font color=\"#ffffff\" face=\"Lato\"><br></font></div><div><font color=\"#ffffff\" face=\"Lato\"><br></font></div><div><font color=\"#ffffff\" face=\"Lato\"><br></font></div><div><font color=\"#ffffff\" face=\"Lato\"><br></font></div><div><font color=\"#ffffff\" face=\"Lato\"><br></font></div><div><font color=\"#ffffff\" face=\"Lato\"><br></font></div><div><font color=\"#ffffff\" face=\"Lato\"><br></font></div><br><br><ul><li><span style=\"color: rgb(255, 255, 255); font-family: Lato; line-height: normal;\">AutoLayout 第三方库</span></li></ul><font color=\"#ffffff\" face=\"Lato\"><br></font><ul><li><span style=\"color: rgb(255, 255, 255); font-family: Lato; line-height: normal;\">AutoLayout 目前存在的问题</span><br></li></ul><font color=\"#ffffff\" face=\"Lato\"><br></font><ul><li><span style=\"color: rgb(255, 255, 255); line-height: normal;\">Ask Question &amp; Discussion</span><br></li></ul>","selected":false},{"TextBox":{},"x":74,"y":220,"scale":{"x":1,"y":1},"type":"TextBox","size":22,"text":"<div style=\"text-align: left;\"><ul><li><span style=\"color: rgb(238, 238, 238); font-family: Lato; line-height: normal;\">什么是AutoLayout?</span><br></li><li><span style=\"color: rgb(238, 238, 238); line-height: normal;\">约束的使用</span><br></li><li><span style=\"color: rgb(238, 238, 238); line-height: normal;\">约束的添加规则</span><br></li><li><span style=\"color: rgb(238, 238, 238); line-height: normal;\">AutoLayout  的布局流程</span><br></li><li><span style=\"color: rgb(238, 238, 238); line-height: normal;\">什么是Intrinsic content Size？</span><br></li><li><span style=\"color: rgb(238, 238, 238); line-height: normal;\">Compression Resistance 和 Content Hugging</span><br></li><li><span style=\"color: rgb(238, 238, 238); line-height: normal;\">Frame 和 Alignment Rect</span><br></li><li><span style=\"color: rgb(238, 238, 238); line-height: normal;\">Animation vs Transform</span><br></li><li><span style=\"color: rgb(238, 238, 238); line-height: normal;\">Using Scroll Views With Auto Layout</span><br></li><li><span style=\"color: rgb(238, 238, 238); line-height: normal;\">Visual Formart Language简介</span><br></li><li><span style=\"color: rgb(238, 238, 238); line-height: normal;\">AutoLayout 性能</span><br></li></ul></div>","selected":false}],"z":0,"impScale":3,"rotateX":0,"rotateY":0,"rotateZ":0,"index":1,"selected":false,"active":false,"x":460,"y":180},{"components":[{"TextBox":{},"x":279,"y":48,"scale":{"x":1,"y":1},"type":"TextBox","text":"<div style=\"text-align: center;\"><font color=\"#eeeeee\"><font face=\"Ubuntu, sans-serif\">&nbsp;当前IOS开发涉及的</font>适配问题</font></div>","size":36,"selected":false},{"TextBox":{},"x":15,"y":148,"scale":{"x":1,"y":1},"type":"TextBox","size":36,"text":"<ul><li><span style=\"color: rgb(238, 238, 238); font-family: Ubuntu; line-height: normal;\">屏幕尺寸的多样化</span><br></li></ul>","selected":false},{"TextBox":{},"x":45,"y":221,"scale":{"x":1,"y":1},"type":"TextBox","size":24,"text":"<font color=\"#ffffff\"><font face=\"Ubuntu\">iPhone4 、4s &nbsp; &nbsp; &nbsp; 3.5-inch<br></font><br>iPhone5、5C       4.0-inch<br><br>iPhone6                4.7-inch<br><br>iPhone6+              5.5-inch<br>...<br><br>iPhone100？         what 's the inch？？<br><br>iPad 系列？</font><br>","selected":false},{"src":"http://wanzao2.b0.upaiyun.com/system/pictures/3316279/original/20130609140414.png","type":"Image","x":478,"y":136,"scale":{"x":1,"y":1},"imageType":"PNG","selected":false}],"z":0,"impScale":3,"rotateX":0,"rotateY":0,"rotateZ":0,"index":2,"selected":false,"active":false,"markdown":"","surface":"bg-custom-000000","background":"bg-transparent","x":460,"y":180},{"components":[{"TextBox":{},"x":279,"y":48,"scale":{"x":1,"y":1},"type":"TextBox","text":"<div style=\"text-align: center;\"><font color=\"#eeeeee\"><font face=\"Ubuntu, sans-serif\">&nbsp;当前IOS开发涉及的</font>适配问题</font></div>","size":36,"selected":false},{"TextBox":{},"x":78,"y":157,"scale":{"x":1,"y":1},"type":"TextBox","size":36,"text":"<br>","selected":false},{"TextBox":{},"x":10,"y":175,"scale":{"x":1,"y":1},"type":"TextBox","size":36,"text":"<ul><li><span style=\"color: rgb(238, 238, 238); font-family: Ubuntu; line-height: normal;\">屏幕横竖屏的旋转布局</span><br></li></ul>","selected":false},{"TextBox":{},"x":52,"y":233,"scale":{"x":1,"y":1},"type":"TextBox","size":24,"text":"<font color=\"#eeeeee\">一种屏幕尺寸 &nbsp; &nbsp; &nbsp;------&gt; &nbsp; 2 种 布局<br></font><font color=\"#ffffff\">两种屏幕尺寸 &nbsp; &nbsp; &nbsp;------&gt; &nbsp; 4 种 布局<br>N种屏幕尺寸 &nbsp; &nbsp; &nbsp; ------&gt; &nbsp; what？」」</font><br>","selected":false},{"TextBox":{},"x":8,"y":356,"scale":{"x":1,"y":1},"type":"TextBox","size":36,"text":"<ul><li><span style=\"color: rgb(238, 238, 238); font-family: Ubuntu; line-height: normal;\">字符多语言、国际化</span><br></li></ul>","selected":false},{"TextBox":{},"x":48,"y":416,"scale":{"x":1,"y":1},"type":"TextBox","size":24,"text":"<font color=\"#eeeeee\" face=\"Ubuntu\">不同的语言 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ------&gt;控件的大小</font><br>","selected":false},{"TextBox":{},"x":8,"y":476,"scale":{"x":1,"y":1},"type":"TextBox","size":36,"text":"<ul><li><span style=\"color: rgb(238, 238, 238); line-height: normal;\">字体大小的适配、可配置</span><br></li></ul>","selected":false},{"TextBox":{},"x":48,"y":556,"scale":{"x":1,"y":1},"type":"TextBox","size":24,"text":"<font color=\"#eeeeee\" face=\"Ubuntu\">不同的字体大小 &nbsp; ------&gt;控件的大小</font><br>","selected":false},{"TextBox":{},"x":11,"y":621,"scale":{"x":1,"y":1},"type":"TextBox","size":36,"text":"<ul><li><font color=\"#eeeeee\"><span style=\"line-height: normal;\">有完没完？</span></font></li></ul>","selected":false},{"src":"http://sc.sinaimg.cn/2011/1209/U5959P841DT20111209110617.jpg","type":"Image","x":570,"y":261,"scale":{"x":1,"y":1},"imageType":"JPG","selected":false}],"z":0,"impScale":3,"rotateX":0,"rotateY":0,"rotateZ":0,"index":3,"selected":false,"active":false,"markdown":"","background":"bg-custom-000000","x":740,"y":180},{"components":[{"TextBox":{},"x":78,"y":157,"scale":{"x":1,"y":1},"type":"TextBox","size":36,"text":"<br>","selected":false},{"TextBox":{},"x":132,"y":60,"scale":{"x":1,"y":1},"type":"TextBox","size":56,"text":"<div style=\"text-align: left;\"><span style=\"color: rgb(238, 238, 238); font-family: Ubuntu, sans-serif;\">- (how &nbsp;much) 计算适配的工作量</span></div><font color=\"#eeeeee\" face=\"Ubuntu, sans-serif\"><div style=\"text-align: left;\">{</div><div style=\"text-align: left;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if &nbsp;使用传统布局</div><div style=\"text-align: left;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return 你的工作量</div><div style=\"text-align: left;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;....</div><div style=\"text-align: left;\"><br></div><div style=\"text-align: left;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;else if 使用AutoLayout</div><div style=\"text-align: left;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;return &nbsp; ？</div><div style=\"text-align: left;\">}</div></font><div style=\"text-align: left;\"><br></div>","selected":false}],"z":0,"impScale":3,"rotateX":0,"rotateY":0,"rotateZ":0,"index":4,"selected":false,"active":false,"markdown":"","background":"bg-custom-000000","x":1020,"y":180},{"components":[{"TextBox":{},"x":125,"y":7,"scale":{"x":1,"y":1},"type":"TextBox","text":"<div style=\"text-align: left;\"><font color=\"#eeeeee\" face=\"Ubuntu, sans-serif\">But, Auto Layout 是个啥子？&nbsp;</font></div>","size":64,"selected":false},{"TextBox":{},"x":78,"y":157,"scale":{"x":1,"y":1},"type":"TextBox","size":36,"text":"<br>","selected":false},{"src":"http://img.taopic.com/uploads/allimg/130514/240391-1305140QQ147.jpg","type":"Image","x":0,"y":88,"scale":{"x":1.021,"y":1.021,"width":1020.9999999999999,"height":681.007},"imageType":"JPG","selected":false}],"z":0,"impScale":3,"rotateX":0,"rotateY":0,"rotateZ":0,"index":5,"selected":false,"active":false,"markdown":"","background":"bg-custom-000000","x":1300,"y":180},{"components":[{"TextBox":{},"x":312,"y":7,"scale":{"x":1,"y":1},"type":"TextBox","text":"<div style=\"text-align: center;\"><font color=\"#eeeeee\" face=\"Ubuntu, sans-serif\">&nbsp;Auto Layout &nbsp;</font></div>","size":64,"selected":false},{"TextBox":{},"x":78,"y":157,"scale":{"x":1,"y":1},"type":"TextBox","size":36,"text":"<br>","selected":false},{"TextBox":{},"x":10,"y":131,"scale":{"x":1,"y":1},"type":"TextBox","size":23,"text":"<ul><li><span style=\"color: rgb(238, 238, 238); font-family: Ubuntu; line-height: normal;\">Auto Layout is a system that lets you lay out your app’s user interface by creating a&nbsp;</span></li></ul><span style=\"color: rgb(238, 238, 238); font-family: Ubuntu;\">mathematical description of the relationships between the elements</span><br><br>","selected":false},{"TextBox":{},"x":10,"y":444,"scale":{"x":1,"y":1},"type":"TextBox","size":24,"text":"<ul><li><font color=\"#eeeeee\" face=\"Ubuntu\"><span style=\"line-height: normal;\">AutoLayout 是一个系统，可以让你通过创建元素之间关系的数学表达式，来进行APP</span></font></li></ul><span style=\"color: rgb(238, 238, 238); font-family: Ubuntu;\">用户界面的布局。</span><br>","selected":false},{"TextBox":{},"x":10,"y":525,"scale":{"x":1,"y":1},"type":"TextBox","size":24,"text":"<ul><li><font color=\"#eeeeee\" face=\"Ubuntu\"><span style=\"line-height: normal;\">AutoLayout 是一个基于约束（NSContraint）的描述性的布局系统.</span></font></li></ul>","selected":false},{"TextBox":{},"x":10,"y":228,"scale":{"x":1,"y":1},"type":"TextBox","size":24,"text":"<ul><li style=\"text-align: left;\"><span style=\"color: rgb(238, 238, 238); font-family: Ubuntu; line-height: normal;\">Using Auto Layout, you can create a dynamic and versatile interface that responds&nbsp;</span></li></ul><span style=\"color: rgb(238, 238, 238); font-family: Ubuntu;\">appropriately&nbsp;</span><span style=\"color: rgb(238, 238, 238); font-family: Ubuntu;\">to changes in screen size, device orientation, and localization</span><br>","selected":false},{"TextBox":{},"x":10,"y":581,"scale":{"x":1,"y":1},"type":"TextBox","size":24,"text":"<ul><li><span style=\"color: rgb(238, 238, 238); font-family: Ubuntu; line-height: normal;\">通过AutoLayout,你可以创建动态的、通用的界面，来适配针对屏幕尺寸、设备旋转、</span></li></ul><span style=\"color: rgb(238, 238, 238); font-family: Ubuntu;\">本地化的改变。</span><br>","selected":false},{"TextBox":{},"x":10,"y":365,"scale":{"x":1,"y":1},"type":"TextBox","size":24,"text":"<ul><li><span style=\"color: rgb(238, 238, 238); font-family: Ubuntu; line-height: normal;\">-----------------------&gt;</span><br></li></ul>","selected":false},{"TextBox":{},"x":11,"y":644,"scale":{"x":1,"y":1},"type":"TextBox","size":24,"text":"<br>","selected":false}],"z":0,"impScale":3,"rotateX":0,"rotateY":0,"rotateZ":0,"index":6,"selected":false,"active":false,"markdown":"","background":"bg-custom-000000","x":1580,"y":180},{"components":[{"TextBox":{},"x":312,"y":7,"scale":{"x":1,"y":1},"type":"TextBox","text":"<div style=\"text-align: center;\"><font color=\"#eeeeee\" face=\"Ubuntu, sans-serif\">&nbsp;Auto Layout &nbsp;</font></div>","size":64,"selected":false},{"TextBox":{},"x":78,"y":157,"scale":{"x":1,"y":1},"type":"TextBox","size":36,"text":"<br>","selected":false},{"TextBox":{},"x":11,"y":644,"scale":{"x":1,"y":1},"type":"TextBox","size":24,"text":"<br>","selected":false},{"src":"http://b40.photo.store.qq.com/psb?/V10NKvLT0DXD44/3mwVHuexfs.U3ZAu0diEizlsnhN5OIu1xRznrXpwc1c!/b/dCgAAAAAAAAA&bo=QAZmAkAGZgIDCC0!&rf=viewer_311","type":"Image","x":-51,"y":152,"scale":{"x":0.704375,"y":0.704375,"width":1127,"height":432.48625},"imageType":"U3ZAU0DIEIZLSNHN5OIU1XRZNRXPWC1C!/B/DCGAAAAAAAAA&BO=QAZMAKAGZGIDCC0!&RF=VIEWER_311","selected":false},{"src":"https://github.com/zhilshi/zhilshi.github.io/blob/master/constraints.png?raw=true","type":"Image","x":1,"y":168,"scale":{"x":0.639375,"y":0.639375,"width":1023,"height":392.57625},"imageType":"PNG","selected":false}],"z":0,"impScale":3,"rotateX":0,"rotateY":0,"rotateZ":0,"index":7,"selected":false,"active":false,"markdown":"","background":"bg-custom-000000","x":1860,"y":460},{"components":[{"src":"http://xuexuefeng.com/content/images/2014/10/autolayout-1.png","type":"Image","x":4,"y":9,"scale":{"x":1,"y":1},"imageType":"PNG","selected":false},{"TextBox":{},"x":341.3333333333333,"y":256,"scale":{"x":1,"y":1},"type":"TextBox","size":24,"text":"<br>","selected":false},{"TextBox":{},"x":66,"y":90,"scale":{"x":1,"y":1},"type":"TextBox","size":24,"text":"<font color=\"#eeeeee\" face=\"Ubuntu\">(50.f, 100.f, 150.f, 150.f);<br></font><br>","selected":false},{"TextBox":{},"x":531,"y":30,"scale":{"x":1,"y":1},"type":"TextBox","text":"<font color=\"#ffffff\" face=\"Ubuntu, sans-serif\">传统布局：<br></font><font color=\"#ffffff\">&nbsp; &nbsp; &nbsp; &nbsp; CGRectMake(50.0,100.0,150.0,150.0)</font><br>","size":24,"selected":false},{"TextBox":{},"x":530,"y":104,"scale":{"x":1,"y":1},"type":"TextBox","text":"<font color=\"#ffffff\" face=\"Ubuntu, sans-serif\">Auto Layout:</font><br>","size":24,"selected":false},{"TextBox":{},"x":530,"y":251,"scale":{"x":1,"y":1},"type":"TextBox","text":"<font color=\"#ffffff\" face=\"Ubuntu, sans-serif\">描述(伪代码)：</font><br>","size":24,"selected":false},{"TextBox":{},"x":566,"y":141,"scale":{"x":1,"y":1},"type":"TextBox","text":"<font color=\"#ffffff\" face=\"Ubuntu, sans-serif\">元素：self.view 、 theRedView<br></font><font color=\"#ffffff\">关系：top 、leading、height、width...<br>约束：top=100.0、leading＝50.0...</font><br>","size":24,"selected":false},{"TextBox":{},"x":566,"y":294,"scale":{"x":1,"y":1},"type":"TextBox","text":"<font color=\"#ffffff\"><font face=\"Ubuntu, sans-serif\">theRedView.top &nbsp; &nbsp; &nbsp; = self.view.top + 100.0<br></font>theRedView.leading = self.view.leading +50<br>theRedView.height &nbsp; = 150.0<br>theRedView.width &nbsp; &nbsp;= 150.0</font><br>","size":24,"selected":false},{"TextBox":{},"x":536,"y":422,"scale":{"x":1,"y":1},"type":"TextBox","text":"<font color=\"#ffffff\" face=\"Ubuntu, sans-serif\">-----------------------&gt;&gt;</font><br>","size":24,"selected":false},{"TextBox":{},"x":535,"y":473,"scale":{"x":1,"y":1},"type":"TextBox","text":"<font color=\"#ffffff\">redView.Orgin_Y = superView.orgin_Y * 1 + 100.0<br></font><font color=\"#ffffff\">redView.Orgin_X = superView.orgin_X * 1 + 50</font><br>","size":22,"selected":false},{"TextBox":{},"x":524,"y":502,"scale":{"x":1,"y":1},"type":"TextBox","text":"<br>","size":23,"selected":false},{"TextBox":{},"x":539,"y":547,"scale":{"x":1,"y":1},"type":"TextBox","text":"<font color=\"#ffffff\" face=\"Ubuntu, sans-serif\">-----------------------&gt;&gt;</font><br>","size":24,"selected":false},{"TextBox":{},"x":540,"y":615,"scale":{"x":1,"y":1},"type":"TextBox","text":"<font face=\"Ubuntu, sans-serif\" color=\"#b85d5d\">表达式：y = m * x &nbsp;+ b</font><br>","size":36,"selected":false}],"z":0,"impScale":3,"rotateX":0,"rotateY":0,"rotateZ":0,"index":8,"selected":false,"active":false,"x":2140,"y":460,"background":"bg-custom-070707"},{"components":[{"TextBox":{},"x":219,"y":35,"scale":{"x":1,"y":1},"type":"TextBox","size":48,"text":"<font color=\"#ffffff\">Auto Layout Basic Concepts</font><br>","selected":false},{"TextBox":{},"x":31,"y":112,"scale":{"x":1,"y":1},"type":"TextBox","size":36,"text":"<ul><li><span style=\"color: rgb(255, 255, 255); font-family: Lato; line-height: normal;\">Constraint</span><br></li></ul>","selected":false},{"TextBox":{},"x":81,"y":172,"scale":{"x":1,"y":1},"type":"TextBox","size":24,"text":"<font color=\"#ffffff\" face=\"Lato\">The fundamental building block in Auto Layout is the constraint.</font><br>","selected":false},{"TextBox":{},"x":81,"y":213,"scale":{"x":1,"y":1},"type":"TextBox","size":24,"text":"<font color=\"#ffffff\" face=\"Lato\">在自动布局中，基础的自动构建块就是约束。</font><br>","selected":false},{"TextBox":{},"x":31,"y":258,"scale":{"x":1,"y":1},"type":"TextBox","text":"<ul><li><span style=\"color: rgb(255, 255, 255); font-family: Ubuntu, sans-serif; line-height: normal;\">表达式：y = m * x &nbsp;+ b</span><br></li></ul>","size":36,"selected":false},{"TextBox":{},"x":81,"y":312,"scale":{"x":1,"y":1},"type":"TextBox","size":24,"text":"<font color=\"#ffffff\" face=\"Lato\">y 和 x 是 views的属性</font><br>","selected":false},{"TextBox":{},"x":352,"y":310,"scale":{"x":1,"y":1},"type":"TextBox","size":24,"text":"<font color=\"#ffffff\" face=\"Lato\">m 和 b 是具体的浮点数</font><br>","selected":false},{"TextBox":{},"x":51,"y":442,"scale":{"x":1,"y":1},"type":"TextBox","text":"<ul><li><font color=\"#ffffff\" face=\"Ubuntu, sans-serif\"><span style=\"line-height: normal;\">NSLayoutConstraint类</span></font></li></ul>","size":36,"selected":false},{"TextBox":{},"x":75,"y":492,"scale":{"x":1,"y":1},"type":"TextBox","size":24,"text":"<font color=\"#f4eded\"><font face=\"Lato\">@property (readonly, assign) id firstItem;<br></font>@property (readonly) NSLayoutAttribute firstAttribute;<br>@property (readonly) NSLayoutRelation relation;<br>@property (readonly, assign) id secondItem;<br>@property (readonly) NSLayoutAttribute secondAttribute;<br>@property (readonly) CGFloat multiplier;<br>@property CGFloat constant;<br>@property UILayoutPriority </font><font color=\"#c18080\">priority</font><font color=\"#f4eded\">;</font><br>","selected":false},{"TextBox":{},"x":51,"y":385,"scale":{"x":1,"y":1},"type":"TextBox","text":"<ul><li><font color=\"#f0e8e8\">view1.attr1 = view2.attr2 * multiplier + constant</font></li></ul>","size":36,"selected":false},{"TextBox":{},"x":53,"y":347,"scale":{"x":1,"y":1},"type":"TextBox","text":"<font color=\"#ffffff\" face=\"Ubuntu, sans-serif\">-----------------------&gt;&gt;</font><br>","size":24,"selected":false}],"z":0,"impScale":3,"rotateX":0,"rotateY":0,"rotateZ":0,"index":9,"selected":false,"active":false,"x":2420,"y":460,"background":"bg-custom-040404"},{"components":[{"TextBox":{},"x":219,"y":35,"scale":{"x":1,"y":1},"type":"TextBox","size":48,"text":"<font color=\"#ffffff\">Auto Layout Basic Concepts</font><br>","selected":false},{"TextBox":{},"x":31,"y":118,"scale":{"x":1,"y":1},"type":"TextBox","text":"<ul><li><font color=\"#ffffff\" face=\"Ubuntu, sans-serif\"><span style=\"line-height: normal;\">NSLayoutConstraint类</span></font></li></ul>","size":36,"selected":false,"skewX":0},{"TextBox":{},"x":51,"y":172,"scale":{"x":1,"y":1},"type":"TextBox","size":24,"text":"<font color=\"#ffffff\" face=\"Lato\">+(instancetype)constraintWithItem:(id)view1 <br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; attribute:(NSLayoutAttribute)attr1 <br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; relatedBy:(NSLayoutRelation)relation <br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;toItem:(id)view2 <br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; attribute:(NSLayoutAttribute)attr2 <br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; multiplier:(CGFloat)multiplier <br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; constant:(CGFloat)c;</font><br>","selected":false},{"TextBox":{},"x":72,"y":402,"scale":{"x":1,"y":1},"type":"TextBox","size":24,"text":"<font color=\"#ffffff\" face=\"Lato\">view1.attr1 &nbsp; &nbsp; (= &gt;= &lt;=) &nbsp;view2.attr2 * multiplier + c</font><br>","selected":false},{"TextBox":{},"x":77,"y":455,"scale":{"x":1,"y":1},"type":"TextBox","size":24,"text":"<font color=\"#ffffff\" face=\"Lato\">so，通过表达式，来描述元素之间的关系，生成对应的约束！</font><br>","selected":false},{"TextBox":{},"x":77,"y":511,"scale":{"x":1,"y":1},"type":"TextBox","size":24,"text":"<font color=\"#ffffff\" face=\"Lato\">接下来，让我们通过约束类，来实现之前那个简单的布局吧</font><br>","selected":false}],"z":0,"impScale":3,"rotateX":0,"rotateY":0,"rotateZ":0,"index":10,"selected":false,"active":false,"x":2420,"y":460,"background":"bg-custom-040404"},{"components":[{"TextBox":{},"x":505,"y":4,"scale":{"x":1,"y":1},"type":"TextBox","size":14,"text":"<ol><li><font color=\"#c45b5b\"><span style=\"font-family: Lato; line-height: normal;\">UIView *view = [UIView new];</span><br></font></li><li><font color=\"#c45b5b\"><span style=\"line-height: normal;\">[view setBackgroundColor:[UIColor redColor]];</span><br></font></li><li><font color=\"#c45b5b\"><span style=\"line-height: normal;\">[self.view addSubview:view];</span><br></font></li><li><span style=\"line-height: normal;\"><font color=\"#c45b5b\"><br></font></span></li><li><font color=\"#c45b5b\"><span style=\"line-height: normal;\">CGRect viewFrame = CGRectMake(50.f, 100.f, 150.f, 150.f);</span><br></font></li><li><span style=\"line-height: normal;\"><font color=\"#c45b5b\"><br></font></span></li><li><font color=\"#c45b5b\"><span style=\"line-height: normal;\">// 使用 Auto Layout 布局</span><br></font></li><li><font color=\"#c45b5b\"><span style=\"line-height: normal;\">[view setTranslatesAutoresizingMaskIntoConstraints:NO];</span><br></font></li><li><span style=\"line-height: normal;\"><font color=\"#c45b5b\"><br></font></span></li><li><font color=\"#c45b5b\"><span style=\"line-height: normal;\">// `view` 的左边距离 `self.view` 的左边 50 点.</span><br></font></li><li><font color=\"#c45b5b\"><span style=\"line-height: normal;\">NSLayoutConstraint *viewLeft = [NSLayoutConstraint constraintWithItem:view</span><br></font></li><li><font color=\"#c45b5b\"><span style=\"line-height: normal;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; attribute:NSLayoutAttributeLeading</span><br></font></li><li><font color=\"#c45b5b\"><span style=\"line-height: normal;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; relatedBy:NSLayoutRelationEqual</span><br></font></li><li><font color=\"#c45b5b\"><span style=\"line-height: normal;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;toItem:self.view</span><br></font></li><li><font color=\"#c45b5b\"><span style=\"line-height: normal;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; attribute:NSLayoutAttributeLeading</span><br></font></li><li><font color=\"#c45b5b\"><span style=\"line-height: normal;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;multiplier:1</span><br></font></li><li><font color=\"#c45b5b\"><span style=\"line-height: normal;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;constant:CGRectGetMinX(viewFrame)];</span><br></font></li><li><span style=\"line-height: normal;\"><font color=\"#c45b5b\"><br></font></span></li><li><font color=\"#c45b5b\"><span style=\"line-height: normal;\">// `view` 的顶部距离 `self.view` 的顶部 100 点.</span><br></font></li><li><font color=\"#c45b5b\"><span style=\"line-height: normal;\">NSLayoutConstraint *viewTop = [NSLayoutConstraint constraintWithItem:view</span><br></font></li><li><font color=\"#c45b5b\"><span style=\"line-height: normal;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;attribute:NSLayoutAttributeTop</span><br></font></li><li><font color=\"#c45b5b\"><span style=\"line-height: normal;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;relatedBy:NSLayoutRelationEqual</span><br></font></li><li><font color=\"#c45b5b\"><span style=\"line-height: normal;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; toItem:self.view</span><br></font></li><li><font color=\"#c45b5b\"><span style=\"line-height: normal;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;attribute:NSLayoutAttributeTop</span><br></font></li><li><font color=\"#c45b5b\"><span style=\"line-height: normal;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; multiplier:1</span><br></font></li><li><font color=\"#c45b5b\"><span style=\"line-height: normal;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; constant:CGRectGetMinY(viewFrame)];</span><br></font></li><li><font color=\"#c45b5b\"><span style=\"line-height: normal;\">// `view` 的宽度 是 60 点.</span><br></font></li><li><font color=\"#c45b5b\"><span style=\"line-height: normal;\">NSLayoutConstraint *viewWidth = [NSLayoutConstraint constraintWithItem:view</span><br></font></li><li><font color=\"#c45b5b\"><span style=\"line-height: normal;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;attribute:NSLayoutAttributeWidth</span><br></font></li><li><font color=\"#c45b5b\"><span style=\"line-height: normal;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;relatedBy:NSLayoutRelationGreaterThanOrEqual</span><br></font></li><li><font color=\"#c45b5b\"><span style=\"line-height: normal;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; toItem:nil</span><br></font></li><li><font color=\"#c45b5b\"><span style=\"line-height: normal;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;attribute:NSLayoutAttributeNotAnAttribute</span><br></font></li><li><font color=\"#c45b5b\"><span style=\"line-height: normal;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; multiplier:1</span><br></font></li><li><font color=\"#c45b5b\"><span style=\"line-height: normal;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; constant:CGRectGetWidth(viewFrame)];</span><br></font></li><li><font color=\"#c45b5b\"><span style=\"line-height: normal;\">// `view` 的高度是 60 点.</span><br></font></li><li><font color=\"#c45b5b\"><span style=\"line-height: normal;\">NSLayoutConstraint *viewHeight = [NSLayoutConstraint constraintWithItem:view</span><br></font></li><li><font color=\"#c45b5b\"><span style=\"line-height: normal;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; attribute:NSLayoutAttributeHeight</span><br></font></li><li><font color=\"#c45b5b\"><span style=\"line-height: normal;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; relatedBy:NSLayoutRelationGreaterThanOrEqual</span><br></font></li><li><font color=\"#c45b5b\"><span style=\"line-height: normal;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;toItem:nil</span><br></font></li><li><font color=\"#c45b5b\"><span style=\"line-height: normal;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; attribute:NSLayoutAttributeNotAnAttribute</span><br></font></li><li><font color=\"#c45b5b\"><span style=\"line-height: normal;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;multiplier:1</span><br></font></li><li><font color=\"#c45b5b\"><span style=\"line-height: normal;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;constant:CGRectGetHeight(viewFrame)];</span><br></font></li><li><font color=\"#c45b5b\"><span style=\"line-height: normal;\">// 把约束添加到父视图上.</span><br></font></li><li><span style=\"line-height: normal;\"><font color=\"#c45b5b\">[self.view addConstraints:@[viewLeft, viewTop, viewWidth, viewHeight]];</font></span><br></li></ol>","selected":false},{"src":"http://xuexuefeng.com/content/images/2014/10/autolayout-1.png","type":"Image","x":3,"y":9,"scale":{"x":1,"y":1},"imageType":"PNG","selected":false}],"z":0,"impScale":3,"rotateX":0,"rotateY":0,"rotateZ":0,"index":11,"selected":false,"active":false,"x":2700,"y":460,"background":"bg-custom-040404"},{"components":[{"TextBox":{},"x":220,"y":10,"scale":{"x":1,"y":1},"type":"TextBox","size":48,"text":"<font color=\"#ffffff\">Auto Layout Basic Concepts</font><br>","selected":false},{"TextBox":{},"x":10,"y":87,"scale":{"x":1,"y":1},"type":"TextBox","text":"<ul><li><span style=\"color: rgb(243, 235, 235); line-height: normal;\">Creating Constraints Programmatically（手动创建约束）</span><br></li></ul>","size":24,"selected":false},{"TextBox":{},"x":61,"y":129,"scale":{"x":1,"y":1},"type":"TextBox","size":16,"text":"<font color=\"#eeeeee\">+ (NSArray *)constraintsWithVisualFormat:(NSString *)format options:(NSLayoutFormatOptions)opts metrics:(NSDictionary *)metrics <br>views:(NSDictionary *)views;<br></font><br>","selected":false},{"TextBox":{},"x":62,"y":180,"scale":{"x":1,"y":1},"type":"TextBox","size":16,"text":"<font color=\"#eeeeee\">+(instancetype)constraintWithItem:(id)view1 attribute:(NSLayoutAttribute)attr1 relatedBy:(NSLayoutRelation)relation toItem:(id)view2 <br>attribute:(NSLayoutAttribute)attr2 multiplier:(CGFloat)multiplier constant:(CGFloat)c;<br></font><br>","selected":false},{"TextBox":{},"x":10,"y":240,"scale":{"x":1,"y":1},"type":"TextBox","text":"<ul><li><font color=\"#f3ebeb\"><span style=\"line-height: normal;\">Installing Constraints（安装约束）</span></font></li></ul>","size":24,"selected":false},{"TextBox":{},"x":61,"y":283,"scale":{"x":1,"y":1},"type":"TextBox","size":16,"text":"<font color=\"#eeeeee\">To make a constraint active ,you must add it to a view.(需将约束添加到视图上)</font><br>","selected":false},{"TextBox":{},"x":60,"y":315,"scale":{"x":1,"y":1},"type":"TextBox","size":16,"text":"<font color=\"#eeeeee\">@interface UIView (UIConstraintBasedLayoutInstallingConstraints)<br>- (void)addConstraint:(NSLayoutConstraint *)constraint NS_AVAILABLE_IOS(6_0);<br>- (void)addConstraints:(NSArray *)constraints NS_AVAILABLE_IOS(6_0);<br>- (void)removeConstraint:(NSLayoutConstraint *)constraint NS_AVAILABLE_IOS(6_0);<br>- (void)removeConstraints:(NSArray *)constraints NS_AVAILABLE_IOS(6_0);&nbsp;<br></font><br>","selected":false},{"TextBox":{},"x":10,"y":436,"scale":{"x":1,"y":1},"type":"TextBox","text":"<ul><li><font color=\"#f3ebeb\"><span style=\"line-height: normal;\">Debugging in Code</span></font></li></ul>","size":24,"selected":false},{"TextBox":{},"x":60,"y":487,"scale":{"x":1,"y":1},"type":"TextBox","size":16,"text":"<font color=\"#eeeeee\">NSLayoutResizingMaskConstraints 错误： 设置</font><font color=\"#b74949\">translatesAutoResizingMaskIntoConstraints</font><font color=\"#eeeeee\">为no，禁止autoresuzingmask自动转换成constraints</font><br>","selected":false},{"TextBox":{},"x":60,"y":514,"scale":{"x":1,"y":1},"type":"TextBox","size":16,"text":"<font color=\"#eeeeee\">Ambiguous Layout 布局不能确定<br></font><br>","selected":false},{"TextBox":{},"x":60,"y":543,"scale":{"x":1,"y":1},"type":"TextBox","size":16,"text":"<font color=\"#eeeeee\">Unsatisfiable Constraints 无法满足约束</font><br>","selected":false},{"TextBox":{},"x":60,"y":624,"scale":{"x":1,"y":1},"type":"TextBox","size":16,"text":"<font color=\"#eeeeee\">llldb: po [[UIWindow keyWindow] _autolayoutTrace]<br></font><br>","selected":false},{"TextBox":{},"x":60,"y":594,"scale":{"x":1,"y":1},"type":"TextBox","size":16,"text":"<font color=\"#eeeeee\">UIView 提供三种方式来查明有歧义的布局：hasAmbiguousLayout，exerciseAmbiguityInLayout，和私有方法 _autolayoutTrace。</font><br>","selected":false},{"TextBox":{},"x":60,"y":652,"scale":{"x":1,"y":1},"type":"TextBox","size":16,"text":"<font color=\"#eeeeee\"><a href=\"https://github.com/objcio/issue-3-auto-layout-debugging\" target=\"_blank\">github AutoLayout Debug</a></font><br>","selected":false}],"z":0,"impScale":3,"rotateX":0,"rotateY":0,"rotateZ":0,"index":12,"selected":false,"active":false,"x":3260,"y":460,"background":"bg-custom-000000"},{"components":[{"TextBox":{},"x":220,"y":10,"scale":{"x":1,"y":1},"type":"TextBox","size":48,"text":"<font color=\"#ffffff\">Auto Layout Basic Concepts</font><br>","selected":false},{"TextBox":{},"x":10,"y":84,"scale":{"x":1,"y":1},"type":"TextBox","text":"<ul><li><font color=\"#f3ebeb\"><span style=\"line-height: normal;\">Add constraint rules (添加规则)</span></font></li></ul>","size":24,"selected":false},{"src":"http://xuexuefeng.com/content/images/2014/10/autolayout-2.png","type":"Image","x":7,"y":152,"scale":{"x":0.6875,"y":0.6875,"width":352,"height":209.6875},"imageType":"PNG","selected":false},{"src":"http://xuexuefeng.com/content/images/2014/10/autolayout-3.png","type":"Image","x":699,"y":143,"scale":{"x":0.5991983967935872,"y":0.5991983967935872,"width":299,"height":213.91382765531063},"imageType":"PNG","selected":false},{"src":"http://xuexuefeng.com/content/images/2014/10/autolayout-4.png","type":"Image","x":362,"y":144,"scale":{"x":0.5913555992141454,"y":0.5913555992141454,"width":301,"height":211.1139489194499},"imageType":"PNG","selected":false},{"TextBox":{},"x":68,"y":390,"scale":{"x":1,"y":1},"type":"TextBox","size":16,"text":"<div style=\"text-align: center;\"><span style=\"color: rgb(238, 238, 238);\">两个同层级间视图的约束，</span></div><font color=\"#eeeeee\"><div style=\"text-align: center;\">添加到它们共同的父视图上</div></font>","selected":false},{"TextBox":{},"x":763,"y":385,"scale":{"x":1,"y":1},"type":"TextBox","size":16,"text":"<div style=\"text-align: center;\"><span style=\"color: rgb(238, 238, 238);\">两个不同层级间视图的约束，</span></div><font color=\"#eeeeee\"><div style=\"text-align: center;\">添加到它们最近的共同的父视图上</div></font>","selected":false},{"TextBox":{},"x":396,"y":387,"scale":{"x":1,"y":1},"type":"TextBox","size":16,"text":"<div style=\"text-align: center;\"><font color=\"#eeeeee\">两个有层级关系的视图的约束，</font></div><div style=\"text-align: center;\"><font color=\"#eeeeee\">添加到层次较高的视图上（父视图）上</font></div>","selected":false},{"TextBox":{},"x":10,"y":470,"scale":{"x":1,"y":1},"type":"TextBox","text":"<ul><li><font color=\"#f3ebeb\"><span style=\"line-height: normal;\">为什么约束不是添加到自身上的？</span></font></li></ul>","size":24,"selected":false},{"TextBox":{},"x":60,"y":523,"scale":{"x":1,"y":1},"type":"TextBox","size":16,"text":"<font color=\"#eeeeee\">由布局方式所决定的，在布局流程中，基于自动约束的布局系统，增加了更新约束的操作。</font><br>","selected":false},{"TextBox":{},"x":10,"y":574,"scale":{"x":1,"y":1},"type":"TextBox","text":"<ul><li><font color=\"#f3ebeb\"><span style=\"line-height: normal;\">目前为止，约束的操作流程？</span></font></li></ul>","size":24,"selected":false},{"TextBox":{},"x":60,"y":628,"scale":{"x":1,"y":1},"type":"TextBox","size":16,"text":"<font color=\"#eeeeee\">禁止autoresuzingmask自动转换成constraints--&gt; 创建约束--&gt;添加约束--&gt;布局流程显示 .....</font><br>","selected":false},{"TextBox":{},"x":60,"y":667,"scale":{"x":1,"y":1},"type":"TextBox","size":16,"text":"<font color=\"#eeeeee\">备注:第一步也不是绝对的，后面会介绍特殊情况下可以不需要设置</font><br>","selected":false},{"TextBox":{},"x":10,"y":708,"scale":{"x":1,"y":1},"type":"TextBox","text":"<ul><li><font color=\"#f3ebeb\"><span style=\"line-height: normal;\">现在，你对AutoLayout有点了解了吧！没有问题？ 那么继续～</span></font></li></ul>","size":24,"selected":false}],"z":0,"impScale":3,"rotateX":0,"rotateY":0,"rotateZ":0,"index":13,"selected":false,"active":false,"background":"bg-custom-000000","x":3540,"y":740},{"components":[{"TextBox":{},"x":60,"y":183,"scale":{"x":1,"y":1},"type":"TextBox","size":16,"text":"<ul><li><span style=\"color: rgb(255, 255, 255); line-height: normal;\"><font face=\"Ubuntu, sans-serif\">那么，问题来了？！！ 新的布局流程，是怎么样的？？</font></span></li><li><font color=\"#ffffff\" face=\"Ubuntu, sans-serif\"><span style=\"line-height: normal;\">请看下图</span></font></li></ul><br>","selected":false},{"TextBox":{},"x":61,"y":151,"scale":{"x":1,"y":1},"type":"TextBox","size":16,"text":"<ul><li><span style=\"color: rgb(255, 255, 255); line-height: normal;\"><font face=\"Ubuntu, sans-serif\">直观：所谓的自动布局，就是以相对布局的思想，对视图进行约束操作，从而达到传统布局一样的目的！</font></span></li></ul><br>","selected":false},{"TextBox":{},"x":219,"y":35,"scale":{"x":1,"y":1},"type":"TextBox","size":48,"text":"<font color=\"#ffffff\">Auto Layout Basic Concepts</font><br>","selected":false},{"src":"http://studentdeng.github.io/images/autolayout-8.png","type":"Image","x":1,"y":305,"scale":{"x":0.3865110246433205,"y":0.3865110246433205,"width":596.0000000000002,"height":374.14267185473426},"imageType":"PNG","selected":false},{"TextBox":{},"x":628,"y":306,"scale":{"x":1,"y":1},"type":"TextBox","size":24,"text":"<font color=\"#ffffff\" face=\"Lato\">分为三步：</font><br>","selected":false},{"TextBox":{},"x":629,"y":364,"scale":{"x":1,"y":1},"type":"TextBox","size":16,"text":"<ul><li><font color=\"#ffffff\" face=\"Lato\"><span style=\"line-height: normal;\">更新约束,这是自下而上（从子视图到父视图）发生的</span></font></li></ul>","selected":false},{"TextBox":{},"x":630,"y":397,"scale":{"x":1,"y":1},"type":"TextBox","size":16,"text":"<ul><li><font color=\"#ffffff\" face=\"Lato\"><span style=\"line-height: normal;\">布局，这是个自上而下（从父视图到子视图）的过程</span></font></li></ul>","selected":false},{"TextBox":{},"x":631,"y":431,"scale":{"x":1,"y":1},"type":"TextBox","size":16,"text":"<ul><li><font color=\"#ffffff\" face=\"Lato\"><span style=\"line-height: normal;\">显示，不管是否使用自动布局，自上而下将渲染</span></font></li></ul><span style=\"color: rgb(255, 255, 255); font-family: Lato;\">后的视图传递到屏幕上</span><br>","selected":false},{"TextBox":{},"x":10,"y":94,"scale":{"x":1,"y":1},"type":"TextBox","size":36,"text":"<ul><li><font color=\"#f3ebeb\">布局流程</font><br></li></ul>","selected":false}],"z":0,"impScale":3,"rotateX":0,"rotateY":0,"rotateZ":0,"index":14,"selected":false,"active":false,"background":"bg-custom-040404","x":3540,"y":740},{"components":[{"src":"http://studentdeng.github.io/images/autolayout-9.png","type":"Image","x":150,"y":22,"scale":{"x":0.33363471971066905,"y":0.33363471971066905,"width":737.9999999999999,"height":459.74864376130193},"imageType":"PNG","selected":false},{"TextBox":{},"x":3,"y":521,"scale":{"x":1,"y":1},"type":"TextBox","size":16,"text":"<ul><li><span style=\"color: rgb(255, 255, 255); font-family: Ubuntu; line-height: normal;\">更新约束，可以被认为是一个“计量传递 (measurement pass)”</span><br></li></ul>","selected":false},{"TextBox":{},"x":3,"y":554,"scale":{"x":1,"y":1},"type":"TextBox","size":16,"text":"<ul><li><span style=\"color: rgb(255, 255, 255); font-family: Ubuntu; line-height: normal;\">自下而上（从子视图到父视图）</span><br></li></ul>","selected":false},{"TextBox":{},"x":4,"y":584,"scale":{"x":1,"y":1},"type":"TextBox","size":16,"text":"<ul><li><span style=\"color: rgb(255, 255, 255); font-family: Ubuntu; line-height: normal;\">它为布局准备好必要的信息，而这些约束信息将在实际设置视图的位置 时被传递过去并被使用</span><br></li></ul>","selected":false},{"TextBox":{},"x":3,"y":613,"scale":{"x":1,"y":1},"type":"TextBox","size":16,"text":"<ul><li><span style=\"color: rgb(255, 255, 255); font-family: Ubuntu; line-height: normal;\">通过调用 setNeedsUpdateConstraints 来触发这个操作</span><br></li></ul>","selected":false},{"TextBox":{},"x":3,"y":644,"scale":{"x":1,"y":1},"type":"TextBox","size":16,"text":"<ul><li><span style=\"color: rgb(255, 255, 255); font-family: Ubuntu; line-height: normal;\">你对约束条件系统做出的任何改变都将自动触发这个方法</span><br></li></ul>","selected":false},{"TextBox":{},"x":10,"y":477,"scale":{"x":1,"y":1},"type":"TextBox","size":24,"text":"<ul><li><font color=\"#ffffff\" face=\"Ubuntu\"><span style=\"line-height: normal;\">update Constraints</span></font></li></ul>","selected":false},{"TextBox":{},"x":10,"y":677,"scale":{"x":1,"y":1},"type":"TextBox","size":24,"text":"<ul><li><font color=\"#ffffff\" face=\"Ubuntu\"><span style=\"line-height: normal;\">Layout</span></font></li></ul>","selected":false},{"TextBox":{},"x":5,"y":719,"scale":{"x":1,"y":1},"type":"TextBox","size":16,"text":"<ul><li><font color=\"#ffffff\" face=\"Ubuntu\"><span style=\"line-height: normal;\">使用自动布局，则会在该过程中，通过将约束计算成具体元素的bounds和center</span></font></li></ul>","selected":false},{"TextBox":{},"x":627,"y":720,"scale":{"x":1,"y":1},"type":"TextBox","size":16,"text":"<font face=\"Ubuntu\" color=\"#e78181\">frame的计算，在layout过程中确定的</font><br>","selected":false},{"TextBox":{},"x":227,"y":9,"scale":{"x":1,"y":1},"type":"TextBox","size":48,"text":"<font color=\"#ffffff\">Auto Layout Basic Concepts</font><br>","selected":false},{"TextBox":{},"x":10,"y":94,"scale":{"x":1,"y":1},"type":"TextBox","size":36,"text":"<ul><li><font color=\"#f3ebeb\">布局流程</font><br></li></ul>","selected":false}],"z":0,"impScale":3,"rotateX":0,"rotateY":0,"rotateZ":0,"index":15,"selected":false,"active":false,"background":"bg-custom-000000","x":3820,"y":740},{"components":[{"TextBox":{},"x":219,"y":35,"scale":{"x":1,"y":1},"type":"TextBox","size":48,"text":"<font color=\"#ffffff\">Auto Layout Basic Concepts</font><br>","selected":false},{"TextBox":{},"x":10,"y":108,"scale":{"x":1,"y":1},"type":"TextBox","size":36,"text":"<ul><li><font color=\"#f3ebeb\">布局流程</font><br></li></ul>","selected":false},{"TextBox":{},"x":60,"y":162,"scale":{"x":1,"y":1},"type":"TextBox","size":16,"text":"<ol><li><font color=\"#ca6868\"><span style=\"line-height: normal;\">- (void)updateConstraintsIfNeeded NS_AVAILABLE_IOS(6_0);</span><br></font></li><li><span style=\"line-height: normal; color: rgb(202, 104, 104);\">- (BOOL)needsUpdateConstraints NS_AVAILABLE_IOS(6_0);</span><br></li><li><span style=\"line-height: normal;\"><font color=\"#ca6868\">- (void)setNeedsUpdateConstraints NS_AVAILABLE_IOS(6_0);</font></span><br></li><li><span style=\"line-height: normal;\"><font color=\"#ca6868\">- (void)updateConstraints NS_AVAILABLE_IOS(6_0); //</font><font color=\"#f4eded\">重载该方法，添加本地约束</font></span></li></ol>","selected":false},{"TextBox":{},"x":60,"y":290,"scale":{"x":1,"y":1},"type":"TextBox","size":16,"text":"<ol><li><font color=\"#ca6868\"><span style=\"line-height: normal;\">- (void)setNeedsLayout;</span></font></li><li><font color=\"#ca6868\"><span style=\"line-height: normal;\">- (void)layoutIfNeeded;</span></font></li><li><span style=\"color: rgb(202, 104, 104); line-height: normal;\">- (void)layoutSubviews; /</span><span style=\"line-height: normal;\"><font color=\"#f4eded\">/重载该方法，进行子视图布局控制</font></span></li></ol>","selected":false},{"TextBox":{},"x":60,"y":404,"scale":{"x":1,"y":1},"type":"TextBox","size":16,"text":"<ol><li><font color=\"#ca6868\"><span style=\"line-height: normal;\">- (void)setNeedsDisplay;</span></font></li><li><font color=\"#ca6868\"><span style=\"line-height: normal;\">- (void)setNeedsDisplayInRect:(CGRect)rect;</span></font></li></ol>","selected":false},{"TextBox":{},"x":60,"y":254,"scale":{"x":1,"y":1},"type":"TextBox","size":16,"text":"<ul><li><span style=\"color: rgb(243, 235, 235); line-height: normal;\">setNeedsUpdateConstraints makes sure a future call to updateConstraintsIfNeeded calls updateConstraints.</span><br></li></ul>","selected":false},{"TextBox":{},"x":60,"y":365,"scale":{"x":1,"y":1},"type":"TextBox","size":16,"text":"<ul><li><span style=\"color: rgb(243, 235, 235); line-height: normal;\">setNeedsLayout makes sure a future call to layoutIfNeeded calls layoutSubviews.</span><br></li></ul><br>","selected":false},{"TextBox":{},"x":60,"y":455,"scale":{"x":1,"y":1},"type":"TextBox","size":16,"text":"<ul><li><span style=\"color: rgb(243, 235, 235); line-height: normal;\">略</span><br></li></ul>","selected":false},{"TextBox":{},"x":40,"y":496,"scale":{"x":1,"y":1},"type":"TextBox","size":16,"text":"<font color=\"#f4eded\">但是layoutSubviews被调用时, 也会调用 updateConstraintsIfNeeded方法，因此布局流程是一个迭代的过程。<br>所以一般也不能手动调用layoutSubviews,在使用的时候，可以按以下规则:</font><br>","selected":false},{"TextBox":{},"x":44,"y":687,"scale":{"x":1,"y":1},"type":"TextBox","size":16,"text":"<font color=\"#f4eded\">http://stackoverflow.com/questions/20609206/setneedslayout-vs-setneedsupdateconstraints-and-layoutifneeded-vs-updateconstra</font>","selected":false},{"TextBox":{},"x":59,"y":551,"scale":{"x":1,"y":1},"type":"TextBox","size":16,"text":"<font color=\"#f3ebeb\">1. 对于自定义视图，添加约束，可以重载updateConstraints, 对于视图控制器，可以重载updateViewConstraints<br>2.如果自定义视图采用了自动布局方式，该自定义视图无法使用在未启动自动布局的window中.最好重载requiresConstraintBasedLayout<br>返回YES,明确依赖<br>3.如果需要更新约束条件、移除约束、重置约束等，可以调用setNeedsUpdateConstraints<br>4.如果在更新约束后，需要立即更新frame，则可以调用layoutIfNeed(动画)</font><br><br>","selected":false}],"z":0,"impScale":3,"rotateX":0,"rotateY":0,"rotateZ":0,"index":16,"selected":false,"active":false,"background":"bg-custom-030303","x":4660,"y":740},{"components":[{"TextBox":{},"x":219,"y":8,"scale":{"x":1,"y":1},"type":"TextBox","size":48,"text":"<font color=\"#ffffff\">Auto Layout Basic Concepts</font><br>","selected":false},{"TextBox":{},"x":10,"y":85,"scale":{"x":1,"y":1},"type":"TextBox","size":36,"text":"<ul><li><font color=\"#ffffff\" face=\"Lato\"><span style=\"line-height: normal;\">Intrinsic content Size(固有内容尺寸)</span></font></li></ul>","selected":false},{"TextBox":{},"x":66,"y":144,"scale":{"x":1,"y":1},"type":"TextBox","size":16,"text":"<font color=\"#f4eded\" face=\"Lato\">@interface UIView(UIViewGeometry)<br>- (void)sizeToFit;                       // calls sizeThatFits: with current view bounds and changes bounds size.<br></font><br>","selected":false},{"TextBox":{},"x":66,"y":210,"scale":{"x":1,"y":1},"type":"TextBox","size":16,"text":"<font color=\"#f4eded\" face=\"Lato\">@interface UIView (UIConstraintBasedLayoutLayering)<br></font><font color=\"#ffffff\">- (CGSize)intrinsicContentSize NS_AVAILABLE_IOS(6_0);<br></font><br>","selected":false},{"TextBox":{},"x":10,"y":274,"scale":{"x":1,"y":1},"type":"TextBox","size":24,"text":"<ul><li><span style=\"color: rgb(255, 255, 255); font-family: Lato; line-height: normal;\">固有内容尺寸是一个视图期望为其显示特定内容得到的大小</span><br></li></ul>","selected":false},{"TextBox":{},"x":56,"y":317,"scale":{"x":1,"y":1},"type":"TextBox","size":16,"text":"<ul><li><span style=\"color: rgb(255, 255, 255); font-family: Lato; line-height: normal;\">UILabel 有一个基于字体的首选高度，一个基于字体和显示文本的首选宽度</span></li></ul><br>","selected":false},{"TextBox":{},"x":57,"y":351,"scale":{"x":1,"y":1},"type":"TextBox","size":16,"text":"<ul><li><span style=\"color: rgb(255, 255, 255); font-family: Lato; line-height: normal;\">UIProgressView 仅有一个基于其插图的首选高度，但没有首选宽度</span></li></ul>","selected":false},{"TextBox":{},"x":56,"y":385,"scale":{"x":1,"y":1},"type":"TextBox","size":16,"text":"<ul><li><font color=\"#ffffff\" face=\"Lato\"><span style=\"line-height: normal;\">一个没有格式的 UIView 既没有首选宽度也没有首选高度</span></font></li></ul>","selected":false},{"TextBox":{},"x":10,"y":435,"scale":{"x":1,"y":1},"type":"TextBox","size":24,"text":"<ul><li><span style=\"color: rgb(255, 255, 255); font-family: Lato; line-height: normal;\">自定义视图，实现固有的内容尺寸</span><br></li></ul>","selected":false},{"TextBox":{},"x":56,"y":479,"scale":{"x":1,"y":1},"type":"TextBox","size":16,"text":"<ul><li><font color=\"#ffffff\" face=\"Lato\"><span style=\"line-height: normal;\">重写 intrinsicContentSize 为内容返回恰当的大小</span></font></li></ul>","selected":false},{"TextBox":{},"x":56,"y":516,"scale":{"x":1,"y":1},"type":"TextBox","size":16,"text":"<ul><li><font color=\"#ffffff\" face=\"Lato\"><span style=\"line-height: normal;\">有任何会影响固有内容尺寸的改变发生时，调用 invalidateIntrinsicContentSize</span></font></li></ul>","selected":false},{"TextBox":{},"x":56,"y":556,"scale":{"x":1,"y":1},"type":"TextBox","size":16,"text":"<ul><li><font color=\"#ffffff\" face=\"Lato\"><span style=\"line-height: normal;\">固有内容尺寸必须是独立于视图 frame 的</span></font></li></ul>","selected":false},{"TextBox":{},"x":10,"y":601,"scale":{"x":1,"y":1},"type":"TextBox","size":24,"text":"<ul><li><span style=\"color: rgb(255, 255, 255); font-family: Lato; line-height: normal;\">多行文本的固有尺寸</span><br></li></ul>","selected":false},{"TextBox":{},"x":57,"y":644,"scale":{"x":1,"y":1},"type":"TextBox","size":16,"text":"<ul><li><font face=\"Lato\"><span style=\"line-height: normal;\"><font color=\"#ffffff\">UILabel 的多行文本的固有尺寸是模糊的，因为文本的高度取决于文本的宽度。可</font></span></font></li></ul>","selected":false},{"TextBox":{},"x":57,"y":672,"scale":{"x":1,"y":1},"type":"TextBox","size":16,"text":"<ul><li><font color=\"#ffffff\" face=\"Lato\"><span style=\"line-height: normal;\">以设置preferredMaxLayoutWidth 属性值来确定固有文本尺寸</span></font></li></ul>","selected":false},{"TextBox":{},"x":57,"y":702,"scale":{"x":1,"y":1},"type":"TextBox","size":16,"text":"<ul><li><font color=\"#ffffff\" face=\"Lato\"><span style=\"line-height: normal;\">在事先不知道最大宽度的时候，可以重写label的layoutSubViews方法，获取frame的width为preferredMaxLayoutWidth</span></font></li></ul>","selected":false}],"z":0,"impScale":3,"rotateX":0,"rotateY":0,"rotateZ":0,"index":17,"selected":false,"active":false,"background":"bg-custom-040404","x":4100,"y":740},{"components":[{"TextBox":{},"x":219,"y":8,"scale":{"x":1,"y":1},"type":"TextBox","size":48,"text":"<font color=\"#ffffff\">Auto Layout Basic Concepts</font><br>","selected":false},{"TextBox":{},"x":10,"y":85,"scale":{"x":1,"y":1},"type":"TextBox","size":36,"text":"<ul><li><font color=\"#ffffff\" face=\"Lato\"><span style=\"line-height: normal;\">Compression Resistance和 Content Hugging</span></font></li></ul>","selected":false},{"TextBox":{},"x":63,"y":148,"scale":{"x":1,"y":1},"type":"TextBox","size":24,"text":"<ul><li><font color=\"#ffffff\" face=\"Lato\"><span style=\"line-height: normal;\">压缩阻力：控制视图在两个方向上的收缩性</span></font></li></ul>","selected":false},{"TextBox":{},"x":63,"y":193,"scale":{"x":1,"y":1},"type":"TextBox","size":24,"text":"<ul><li><font color=\"#ffffff\" face=\"Lato\"><span style=\"line-height: normal;\">内容吸附：当视图的大小改变时，它会尽量让视图靠近它的固有内容尺寸</span></font></li></ul>","selected":false},{"TextBox":{},"x":64,"y":271,"scale":{"x":1,"y":1},"type":"TextBox","size":24,"text":"<ul><li><font color=\"#ffffff\" face=\"Lato\"><span style=\"line-height: normal;\">只有使用了固有内容尺寸，该两个属性才回有作用</span></font></li></ul>","selected":false},{"TextBox":{},"x":66,"y":313,"scale":{"x":1,"y":1},"type":"TextBox","size":24,"text":"<ul><li><font color=\"#ffffff\" face=\"Lato\"><span style=\"line-height: normal;\">固有内容尺寸和这些优先值被转换为约束条件</span></font></li></ul>","selected":false},{"TextBox":{},"x":64,"y":234,"scale":{"x":1,"y":1},"type":"TextBox","size":24,"text":"<ul><li><font color=\"#ffffff\" face=\"Lato\"><span style=\"line-height: normal;\">每个视图在两个方向上都分配有内容压缩阻力优先级和内容吸附性优先级</span></font></li></ul>","selected":false},{"TextBox":{},"x":63,"y":360,"scale":{"x":1,"y":1},"type":"TextBox","size":16,"text":"<ul><li><font color=\"#ffffff\" face=\"Lato\"><span style=\"line-height: normal;\">- (UILayoutPriority)contentCompressionResistancePriorityForAxis:(UILayoutConstraintAxis)axis</span></font></li><li><font color=\"#ffffff\" face=\"Lato\"><span style=\"line-height: normal;\">- (void)setContentCompressionResistancePriority:(UILayoutPriority)priority forAxis:(UILayoutConstraintAxis)axis</span></font></li><li><font color=\"#ffffff\" face=\"Lato\"><span style=\"line-height: normal;\">- (UILayoutPriority)contentHuggingPriorityForAxis:(UILayoutConstraintAxis)axis</span></font></li><li><font color=\"#ffffff\" face=\"Lato\"><span style=\"line-height: normal;\">- (void)setContentHuggingPriority:(UILayoutPriority)priority forAxis:(UILayoutConstraintAxis)axis</span></font></li></ul>","selected":false},{"TextBox":{},"x":69,"y":446,"scale":{"x":1,"y":1},"type":"TextBox","size":16,"text":"<font color=\"#c45b5b\">Hugging =&gt; content does not want to grow<br>Compression Resistance =&gt; content does not want to shrink<br>and an example:<br>Say you've got button like this:<br>[       Click Me      ]<br><br>and you've pinned the edges to a larger superview with priority 500.<br>Then, if Hugging priority &gt; 500 it'll look like this:<br>[Click Me]<br>If Hugging priority &lt; 500 it'll look like this:<br><br>[       Click Me      ]<br>If superview now shrinks then, if the Compression Resistance priority &gt; 500, it'll look like this<br>[Click Me]<br><br>Else if Compression Resistance priority &lt; 500, it could look like this:<br>[Cli..]</font><br>","selected":false}],"z":0,"impScale":3,"rotateX":0,"rotateY":0,"rotateZ":0,"index":18,"selected":false,"active":false,"background":"bg-custom-000000","x":4380,"y":740},{"components":[{"TextBox":{},"x":219,"y":8,"scale":{"x":1,"y":1},"type":"TextBox","size":48,"text":"<font color=\"#ffffff\">Auto Layout Basic Concepts</font><br>","selected":false},{"TextBox":{},"x":10,"y":85,"scale":{"x":1,"y":1},"type":"TextBox","size":36,"text":"<ul><li><font color=\"#ffffff\" face=\"Lato\"><span style=\"line-height: normal;\">Frame 和 Alignment Rect</span></font></li></ul>","selected":false},{"TextBox":{},"x":65,"y":148,"scale":{"x":1,"y":1},"type":"TextBox","size":24,"text":"<ul><li><font color=\"#ffffff\" face=\"Lato\"><span style=\"line-height: normal;\">alignment rect ：从一个视图的视觉外观解耦出视图的 layout alignment edges。</span></font></li></ul>","selected":false},{"TextBox":{},"x":61,"y":270,"scale":{"x":1,"y":1},"type":"TextBox","size":24,"text":"<ul><li><font color=\"#ffffff\" face=\"Lato\"><span style=\"line-height: normal;\">为什么使用Alignment Rect,而不是Frame?</span></font></li></ul><br>","selected":false},{"TextBox":{},"x":54,"y":725,"scale":{"x":1,"y":1},"type":"TextBox","size":16,"text":"<ul><li><font color=\"#ffffff\" face=\"Lato\"><span style=\"line-height: normal;\">By working with alignment rectangles instead of frames, Auto Layout ensures that key information like a view’s edges and center are properly considered during layout</span></font></li></ul>","selected":false},{"TextBox":{},"x":65,"y":191,"scale":{"x":1,"y":1},"type":"TextBox","size":24,"text":"<div><ul><li><span style=\"color: rgb(255, 255, 255); font-family: Lato; line-height: normal;\">实际上，Auto Layout添加的约束top、leading等都是针对alignment Rect,而不是frame</span><br></li></ul><span style=\"color: rgb(255, 255, 255); font-family: Lato;\">一般情况下， alignment Rect ＝ frame</span><br></div>","selected":false},{"src":"http://www.informit.com/content/images/chap1_9780321967190/elementLinks/01ald11.jpg","type":"Image","x":267,"y":464,"scale":{"x":1.0972222222222223,"y":1.0972222222222223,"width":395.00000000000006,"height":83.3888888888889},"imageType":"JPG","selected":false},{"TextBox":{},"x":61,"y":574,"scale":{"x":1,"y":1},"type":"TextBox","size":16,"text":"<font color=\"#ffffff\" face=\"Lato\">A view’s alignment rectangle (center) refers strictly to the core visual element to be aligned, without embellishments.</font><br>","selected":false},{"TextBox":{},"x":85,"y":316,"scale":{"x":1,"y":1},"type":"TextBox","size":16,"text":"<span style=\"color: rgb(255, 255, 255); font-family: Lato;\">这是因为，在很多情况下，我们需要在一个视图的content上做额外的工作，比如<br></span><br><ol><li><span style=\"color: rgb(255, 255, 255); font-family: Lato; line-height: normal;\">在一个自定义 icon 类型的按钮比我们期望点击目标还要小的时候</span><br></li><li><span style=\"color: rgb(255, 255, 255); line-height: normal;\">在在内容的周围绘制像 badges，阴影，倒影的装饰时等</span></li><li><span style=\"color: rgb(255, 255, 255); line-height: normal;\">....</span></li></ol><span style=\"color: rgb(238, 238, 238);\">在这种情况下，如果使用frame，是基于整个视图；而实用alignment Rect,则是基于核心的主要内容视图</span><br>","selected":false},{"TextBox":{},"x":85,"y":600,"scale":{"x":1,"y":1},"type":"TextBox","size":16,"text":"<ol><li><span style=\"color: rgb(238, 238, 238); line-height: normal;\">左一：一个蓝色视图,以及添加绘制阴影和角标，我们希望以蓝色的核心视图做布局，水平垂直居中</span><br></li><li><span style=\"color: rgb(238, 238, 238); line-height: normal;\">中间：rect 包含部分的阴影和角标，自动布局布局流程中就需要额外考虑包含内外的差异</span><br></li><li><span style=\"color: rgb(238, 238, 238); line-height: normal;\">右一：rect 包含来了全部的内容视图，这是最理想的。但是，如果是使用frame，是基于整个视图，</span><br></li><li><span style=\"color: rgb(238, 238, 238); line-height: normal;\">因此，除非手动额外计算，否则无法做到以蓝色内容视图做aligment。而使用用aligment rect，只要知道UIEdgeInsets,</span></li></ol><span style=\"color: rgb(238, 238, 238);\">auto layout会自动以核心内容视图做布局</span><br><br>","selected":false},{"TextBox":{},"x":61,"y":638,"scale":{"x":1,"y":1},"type":"TextBox","size":16,"text":"<br>","selected":false}],"z":0,"impScale":3,"rotateX":0,"rotateY":0,"rotateZ":0,"index":19,"selected":false,"active":false,"background":"bg-transparent","x":5500,"y":1020},{"components":[{"TextBox":{},"x":219,"y":8,"scale":{"x":1,"y":1},"type":"TextBox","size":48,"text":"<font color=\"#ffffff\">Auto Layout Basic Concepts</font><br>","selected":false},{"TextBox":{},"x":10,"y":84,"scale":{"x":1,"y":1},"type":"TextBox","size":24,"text":"<ul><li><span style=\"color: rgb(255, 255, 255); font-family: Lato; line-height: normal;\">EG：</span><br></li></ul>","selected":false},{"TextBox":{},"x":60,"y":122,"scale":{"x":1,"y":1},"type":"TextBox","size":16,"text":"<ol><li><font color=\"#c45b5b\"><span style=\"line-height: normal;\">UIImage *image = [[UIImage imageNamed:@\"Shadowed.png\"] &nbsp; &nbsp;imageWithAlignmentRectInsets:UIEdgeInsetsMake(0, 0, 20, 20)];</span><br></font></li><li><span style=\"line-height: normal;\"><font color=\"#c45b5b\"><br></font></span></li><li><span style=\"line-height: normal;\"><font color=\"#c45b5b\">&nbsp;UIImageView *imageView = [[UIImageView alloc] initWithImage:image];</font></span><br></li><li><font color=\"#eeeeee\"><span style=\"line-height: normal;\"><br></span></font></li><li><font color=\"#eeeeee\"><span style=\"line-height: normal;\"><br></span></font></li><li><span style=\"color: rgb(238, 238, 238); line-height: normal;\">LLDB:</span><br></li><li><font color=\"#eeeeee\"><span style=\"line-height: normal;\"><br></span></font></li><li><font color=\"#c45b5b\"><span style=\"line-height: normal;\">HelloWorld[53122:c07] Frame: {{70, 162}, {200, 200}}</span><br></font></li><li><span style=\"line-height: normal;\"><font color=\"#c45b5b\"><br></font></span></li><li><font color=\"#c45b5b\"><span style=\"line-height: normal;\">HelloWorld[53122:c07] Intrinsic Content Size: {180, 180}</span><br></font></li><li><span style=\"line-height: normal;\"><font color=\"#c45b5b\"><br></font></span></li><li><span style=\"line-height: normal;\"><font color=\"#c45b5b\">HelloWorld[53122:c07] Alignment Rect: {{70, 162}, {180, 180}}</font></span><br></li></ol><br>","selected":false},{"TextBox":{},"x":10,"y":371,"scale":{"x":1,"y":1},"type":"TextBox","size":24,"text":"<ul><li><span style=\"color: rgb(238, 238, 238); line-height: normal;\">Frame &nbsp; &lt;-----&gt; Aligment Rect</span><br></li></ul>","selected":false},{"TextBox":{},"x":60,"y":424,"scale":{"x":1,"y":1},"type":"TextBox","size":16,"text":"<ol><li><font color=\"#eeeeee\">&nbsp;alignmentRectForFrame:,&nbsp;</font></li><li><font color=\"#eeeeee\"><br></font></li><li><font color=\"#eeeeee\">&nbsp;frameForAlignmentRect:</font></li><li><font color=\"#eeeeee\"><br></font></li><li><font color=\"#eeeeee\">&nbsp;baselineOffsetFromBottom</font></li><li><font color=\"#eeeeee\"><br></font></li><li><font color=\"#eeeeee\">&nbsp;alignmentRectInsets</font></li></ol><br>","selected":false},{"TextBox":{},"x":60,"y":576,"scale":{"x":1,"y":1},"type":"TextBox","size":16,"text":"<font color=\"#c45b5b\">在大多数情况下，你仅需要重写 alignmentRectInsets 方法，这个方法允许你返回相对于 frame 的 edge insets</font><br>","selected":false},{"TextBox":{},"x":60,"y":614,"scale":{"x":1,"y":1},"type":"TextBox","size":16,"text":"<font color=\"#c45b5b\">如果你需要更多控制权，你可以重写 alignmentRectForFrame: 和 frameForAlignmentRect: 但两个方法互为可逆</font><br>","selected":false}],"z":0,"impScale":3,"rotateX":0,"rotateY":0,"rotateZ":0,"index":20,"selected":false,"active":false,"background":"bg-custom-000000","x":5780,"y":1020},{"components":[{"TextBox":{},"x":219,"y":8,"scale":{"x":1,"y":1},"type":"TextBox","size":48,"text":"<font color=\"#ffffff\">Auto Layout Basic Concepts</font><br>","selected":false},{"TextBox":{},"x":10,"y":85,"scale":{"x":1,"y":1},"type":"TextBox","size":36,"text":"<ul><li><font color=\"#ffffff\" face=\"Lato\"><span style=\"line-height: normal;\">Animation</span></font></li></ul>","selected":false},{"TextBox":{},"x":67,"y":146,"scale":{"x":1,"y":1},"type":"TextBox","size":16,"text":"<font color=\"#ffffff\">改变约束条件重新计算frame,并使用Core Aniumation 将frame 插入到新旧位置</font><br>","selected":false},{"TextBox":{},"x":74,"y":195,"scale":{"x":1,"y":1},"type":"TextBox","size":16,"text":"<ol><li><font color=\"#ca6868\"><span style=\"line-height: normal;\">//更新frame：</span><br></font></li><li><font color=\"#ca6868\"><span style=\"line-height: normal;\">[UIView animateWithDuration:1 animations:^{</span><br></font></li><li><font color=\"#ca6868\"><span style=\"line-height: normal;\">&nbsp; &nbsp; myView.frame = newFrame;</span><br></font></li><li><span style=\"line-height: normal;\"><font color=\"#ca6868\">}];</font></span><br></li></ol>","selected":false},{"TextBox":{},"x":75,"y":306,"scale":{"x":1,"y":1},"type":"TextBox","size":16,"text":"<ol><li><font color=\"#ca6868\"><span style=\"line-height: normal;\">// 更新约束：</span><br></font></li><li><font color=\"#ca6868\"><span style=\"line-height: normal;\">// 修改约束条件</span></font></li><li><font color=\"#ca6868\"><span style=\"line-height: normal;\">// 触发更新约束</span></font></li><li><font color=\"#ca6868\"><span style=\"line-height: normal;\">[UIView animateWithDuration:1 animations:^{</span><br></font></li><li><font color=\"#ca6868\"><span style=\"line-height: normal;\">&nbsp; &nbsp; [myView layoutIfNeeded];</span><br></font></li><li><span style=\"line-height: normal;\"><font color=\"#ca6868\">}];</font></span><br></li></ol>","selected":false},{"TextBox":{},"x":74,"y":527,"scale":{"x":1,"y":1},"type":"TextBox","size":16,"text":"<ol><li><span style=\"line-height: normal; color: rgb(202, 104, 104);\">[UIView animateWithDuration:1 animations:^{</span><br></li><li><font color=\"#ca6868\"><span style=\"line-height: normal;\">&nbsp; &nbsp; myView.transform = CGAffineTransformMakeScale(.5, .5);</span></font></li><li><font color=\"#ca6868\"><span style=\"line-height: normal;\">}];</span></font></li></ol>","selected":false},{"TextBox":{},"x":60,"y":481,"scale":{"x":1,"y":1},"type":"TextBox","size":16,"text":"<font color=\"#ffffff\">考虑下面这个动画？有什么问题？</font><br>","selected":false},{"TextBox":{},"x":59,"y":622,"scale":{"x":1,"y":1},"type":"TextBox","size":16,"text":"<font color=\"#ffffff\">由于一旦使用了AutoLayout布局，那么对应的frame就需要交给AutoLayout去计算处理. 而直接使用transform的时候，则会直接去改变<br></font><font color=\"#f4eded\">视图对应的frame属性，这将导致冲突的发生，导致不同约束下该行为的不确定性！</font><br>","selected":false},{"TextBox":{},"x":59,"y":683,"scale":{"x":1,"y":1},"type":"TextBox","size":16,"text":"<font color=\"#ffffff\">采用AutoLayout，在布局过程中的第二步中，通过视图的layoutSubviews方法，根据约束生成对应视图的frame. &nbsp;你可以认为，所有的约<br>束你可以看成是一个to-do-list,在layoutSubviews中执行list,从而设置frame.<br>因此，当设置以上的transform时，会自动触发视图的layoutSubviews方法，但由于约束的限制和影响，不一定能够保证视图居中且大小<br>为一半</font><br>","selected":false},{"TextBox":{},"x":10,"y":429,"scale":{"x":1,"y":1},"type":"TextBox","size":36,"text":"<ul><li><font color=\"#ffffff\" face=\"Lato\"><span style=\"line-height: normal;\">Autolayout vs View Transforms</span></font></li></ul>","selected":false}],"z":0,"impScale":3,"rotateX":0,"rotateY":0,"rotateZ":0,"index":21,"selected":false,"active":false,"background":"bg-custom-000000","x":6060,"y":1020},{"components":[{"TextBox":{},"x":219,"y":8,"scale":{"x":1,"y":1},"type":"TextBox","size":48,"text":"<font color=\"#ffffff\">Auto Layout Basic Concepts</font><br>","selected":false},{"TextBox":{},"x":10,"y":85,"scale":{"x":1,"y":1},"type":"TextBox","size":36,"text":"<ul><li><font color=\"#ffffff\" face=\"Lato\"><span style=\"line-height: normal;\">Autolayout vs View Transforms</span></font></li></ul>","selected":false},{"TextBox":{},"x":60,"y":143,"scale":{"x":1,"y":1},"type":"TextBox","size":16,"text":"<font color=\"#ffffff\">那么，在使用AutoLayout 情况下，如何实现Transforms呢？</font><br>","selected":false},{"TextBox":{},"x":61,"y":171,"scale":{"x":1,"y":1},"type":"TextBox","size":16,"text":"<font color=\"#f4eded\">1. 不使用constraints<br>2.特定场景下使用constraints<br>3.使用SubView<br>4.使用Layer Transforms</font><br>","selected":false},{"TextBox":{},"x":60,"y":272,"scale":{"x":1,"y":1},"type":"TextBox","size":24,"text":"<ul><li><span style=\"color: rgb(255, 255, 255); line-height: normal;\">不使用Cosntraints</span><br></li></ul>","selected":false},{"TextBox":{},"x":60,"y":321,"scale":{"x":1,"y":1},"type":"TextBox","size":16,"text":"<font color=\"#ffffff\">针对需要动画的view，去除所有的constraints,开启translateAutoresizingMaskIntoConstraintsm,防止视图受AutoLayout的影响</font><br>","selected":false},{"TextBox":{},"x":60,"y":367,"scale":{"x":1,"y":1},"type":"TextBox","size":24,"text":"<ul><li><span style=\"color: rgb(255, 255, 255); line-height: normal;\">特定场景下使用constraints</span><br></li></ul>","selected":false},{"TextBox":{},"x":60,"y":410,"scale":{"x":1,"y":1},"type":"TextBox","size":16,"text":"<font color=\"#ffffff\">针对需要的transforms，设置成对应正确的约束。比如设置一个视图的大小为固有的内容尺寸，center为父视图的center时。 此时<br>设置CGAffineTransformMakeScale(.5, .5)时，会正确到达效果，因为视图的bounds不会依赖于父视图，而比例缩放不回导致center的改变</font><br>","selected":false},{"TextBox":{},"x":60,"y":473,"scale":{"x":1,"y":1},"type":"TextBox","size":24,"text":"<ul><li><font color=\"#ffffff\"><span style=\"line-height: normal;\">使用subView</span></font></li></ul>","selected":false},{"TextBox":{},"x":60,"y":515,"scale":{"x":1,"y":1},"type":"TextBox","size":16,"text":"<font color=\"#ffffff\">以上两种方式都存在一个问题，那就是失去了constraints原本带来的便利，造成一定的好处。更好的一个解决方式是增加一个宿主视图，<br>将动画的视图添加到该宿主视图上,设置动画视图的center为宿主视图的center，通过约束确定宿主视图的位置。 <br>这样的好处，就是可以随往常一样，随意设置动画视图的transform属性。</font><br>","selected":false},{"TextBox":{},"x":60,"y":591,"scale":{"x":1,"y":1},"type":"TextBox","size":24,"text":"<ul><li><font color=\"#ffffff\"><span style=\"line-height: normal;\">使用图层transform替代</span></font></li></ul>","selected":false},{"TextBox":{},"x":71,"y":634,"scale":{"x":1,"y":1},"type":"TextBox","size":16,"text":"<font color=\"#ffffff\">使用layer transform 替换 view transform,可以避免触发view layoutSubviews方法，也就不会与constraints发生冲突了。</font><br>","selected":false},{"TextBox":{},"x":61,"y":663,"scale":{"x":1,"y":1},"type":"TextBox","size":16,"text":"<ol><li><font color=\"#c45b5b\"><span style=\"line-height: normal;\">CABasicAnimation* ba = [CABasicAnimation animationWithKeyPath:@\"transform\"];</span></font></li><li><font color=\"#c45b5b\"><span style=\"line-height: normal;\">ba.autoreverses = YES;</span></font></li><li><font color=\"#c45b5b\"><span style=\"line-height: normal;\">ba.duration = 0.3;</span></font></li><li><font color=\"#c45b5b\"><span style=\"line-height: normal;\">ba.toValue = [NSValue valueWithCATransform3D:CATransform3DMakeScale(1.1, 1.1, 1)];</span></font></li><li><font color=\"#c45b5b\"><span style=\"line-height: normal;\">[v.layer addAnimation:ba forKey:nil];</span></font></li></ol>","selected":false}],"z":0,"impScale":3,"rotateX":0,"rotateY":0,"rotateZ":0,"index":22,"selected":false,"active":false,"background":"bg-custom-000000","x":6340,"y":1020},{"components":[{"TextBox":{},"x":219,"y":7,"scale":{"x":1,"y":1},"type":"TextBox","size":48,"text":"<font color=\"#ffffff\">Auto Layout Basic Concepts</font><br>","selected":false},{"TextBox":{},"x":10,"y":85,"scale":{"x":1,"y":1},"type":"TextBox","size":36,"text":"<ul><li><font color=\"#ffffff\" face=\"Lato\"><span style=\"line-height: normal;\">还有么？</span></font></li></ul>","selected":false},{"TextBox":{},"x":45,"y":153,"scale":{"x":1,"y":1},"type":"TextBox","size":16,"text":"<font color=\"#ffffff\">通过创建Container view,重写layoutSubviews方法,然后在该方法中写入布局代码.</font><br>","selected":false},{"TextBox":{},"x":41,"y":607,"scale":{"x":1,"y":1},"type":"TextBox","size":24,"text":"<font color=\"#c45b5b\"><a href=\"http://stackoverflow.com/questions/12943107/how-do-i-adjust-the-anchor-point-of-a-calayer-when-auto-layout-is-being-used/14105757#14105757\" target=\"_blank\">how-do-i-adjust-the-anchor-point-of-a-calayer-when-auto-layout-is-being-used</a></font>","selected":false},{"TextBox":{},"x":43,"y":185,"scale":{"x":1,"y":1},"type":"TextBox","size":16,"text":"<ol><li><font color=\"#c45b5b\"><span style=\"line-height: normal;\">#import &lt;UIKit/UIKit.h&gt;</span><br></font></li><li><span style=\"line-height: normal;\"><font color=\"#c45b5b\"><br></font></span></li><li><font color=\"#c45b5b\"><span style=\"line-height: normal;\">@interface BugFixContainerView : UIView</span><br></font></li><li><font color=\"#c45b5b\"><span style=\"line-height: normal;\">@property(nonatomic,strong) IBOutlet UIImageView *knobImageView;</span><br></font></li><li><span style=\"line-height: normal;\"><font color=\"#c45b5b\">@end</font></span><br></li></ol>","selected":false},{"TextBox":{},"x":43,"y":297,"scale":{"x":1,"y":1},"type":"TextBox","size":16,"text":"<ol><li><font color=\"#c45b5b\"><span style=\"line-height: normal;\">#import \"BugFixContainerView.h\"</span></font></li><li><span style=\"color: rgb(196, 91, 91); line-height: normal;\">@implementation BugFixContainerView</span><br></li><li><span style=\"color: rgb(196, 91, 91); line-height: normal;\">- (void)layoutSubviews</span><br></li><li><span style=\"color: rgb(196, 91, 91); line-height: normal;\">{</span><br></li><li><span style=\"color: rgb(196, 91, 91); line-height: normal;\">&nbsp; &nbsp; static CGPoint fixCenter = {0};</span><br></li><li><font color=\"#ffffff\"><span style=\"line-height: normal;\">&nbsp; &nbsp; [super layoutSubviews];</span><br></font></li><li><span style=\"color: rgb(196, 91, 91); line-height: normal;\">&nbsp; &nbsp; if (CGPointEqualToPoint(fixCenter, CGPointZero)) {</span><br></li><li><span style=\"color: rgb(196, 91, 91); line-height: normal;\">&nbsp; &nbsp; &nbsp; &nbsp; fixCenter = [self.knobImageView center];</span><br></li><li><span style=\"color: rgb(196, 91, 91); line-height: normal;\">&nbsp; &nbsp; } else {</span><br></li><li><span style=\"color: rgb(196, 91, 91); line-height: normal;\">&nbsp; &nbsp; &nbsp; &nbsp; self.knobImageView.center = fixCenter;</span><br></li><li><span style=\"color: rgb(196, 91, 91); line-height: normal;\">&nbsp; &nbsp; }</span><br></li><li><span style=\"color: rgb(196, 91, 91); line-height: normal;\">}</span><br></li><li><span style=\"color: rgb(196, 91, 91); line-height: normal;\">@end</span><br></li></ol>","selected":false},{"TextBox":{},"x":44,"y":567,"scale":{"x":1,"y":1},"type":"TextBox","size":16,"text":"<font color=\"#ffffff\">以上的示例表示，首先调用[super layoutSubviews]，所以不受AutoLayout任何影响，同时，又可以在此处做任何自动布局代码</font><br>","selected":false}],"z":0,"impScale":3,"rotateX":0,"rotateY":0,"rotateZ":0,"index":23,"selected":false,"active":false,"x":6620,"y":1020},{"components":[{"TextBox":{},"x":130,"y":7,"scale":{"x":1,"y":1},"type":"TextBox","size":48,"text":"<font color=\"#ffffff\">Using Scroll Views With Auto Layout</font><br>","selected":false},{"TextBox":{},"x":10,"y":108,"scale":{"x":1,"y":1},"type":"TextBox","size":24,"text":"<font color=\"#f3ebeb\">由于Scroll views的属性包括top、left、bottom、right、leading等都是相对于content size,而不<br>是bounds,因此无法通过子视图的约束来确定scroll content 大小</font><br>","selected":false},{"TextBox":{},"x":60,"y":182,"scale":{"x":1,"y":1},"type":"TextBox","size":24,"text":"<font color=\"#ca6868\">那么，什么才是正确的姿势呢？<br></font><font color=\"#ffffff\">1.常用的方法是在scroll views 和sub views之间，创建一个container view</font><br><font color=\"#ffffff\">2.\u0010设置container view的edges 为0，并且可以设置container view的size来确定scroll content的大小</font><br><font color=\"#ffffff\">3.sub views 可以使用top、left等属性添加约束布局，不受scroll view的影响</font><br>","selected":false},{"TextBox":{},"x":60,"y":299,"scale":{"x":1,"y":1},"type":"TextBox","size":36,"text":"<font color=\"#ffffff\" face=\"Lato\">Example</font><br>","selected":false},{"TextBox":{},"x":61,"y":356,"scale":{"x":1,"y":1},"type":"TextBox","size":16,"text":"<ol><li><span style=\"color: rgb(202, 104, 104); line-height: normal;\">&nbsp; &nbsp; &nbsp; &nbsp; [self.scrollview autoPinEdgeToSuperviewEdge:ALEdgeTop       withInset:120];</span><br></li><li><span style=\"color: rgb(202, 104, 104); line-height: normal;\">&nbsp; &nbsp; &nbsp; &nbsp; [self.scrollview autoPinEdgeToSuperviewEdge:ALEdgeLeading   withInset:20];</span><br></li><li><span style=\"color: rgb(202, 104, 104); line-height: normal;\">&nbsp; &nbsp; &nbsp; &nbsp; [self.scrollview autoPinEdgeToSuperviewEdge:ALEdgeBottom    withInset:20];</span><br></li><li><span style=\"color: rgb(202, 104, 104); line-height: normal;\">&nbsp; &nbsp; &nbsp; &nbsp; [self.scrollview autoPinEdgeToSuperviewEdge:ALEdgeTrailing  withInset:20];</span><br></li><li><font color=\"#ca6868\"><span style=\"line-height: normal;\"><br></span></font></li><li><span style=\"color: rgb(202, 104, 104); line-height: normal;\">&nbsp; &nbsp; &nbsp; &nbsp; [self.containterView autoPinEdgeToSuperviewEdge:ALEdgeTop];</span><br></li><li><span style=\"color: rgb(202, 104, 104); line-height: normal;\">&nbsp; &nbsp; &nbsp; &nbsp; [self.containterView autoPinEdgeToSuperviewEdge:ALEdgeLeading];</span><br></li><li><span style=\"color: rgb(202, 104, 104); line-height: normal;\">&nbsp; &nbsp; &nbsp; &nbsp; [self.containterView autoPinEdgeToSuperviewEdge:ALEdgeBottom];</span><br></li><li><span style=\"color: rgb(202, 104, 104); line-height: normal;\">&nbsp; &nbsp; &nbsp; &nbsp; [self.containterView autoPinEdgeToSuperviewEdge:ALEdgeTrailing];</span></li><li><span style=\"color: rgb(202, 104, 104); line-height: normal;\">&nbsp; &nbsp; &nbsp; &nbsp; [self.containterView autoSetDimensionsToSize:CGSizeMake([UIApplication sharedApplication].keyWindow.frame.size.width-40,&nbsp;</span></li><li><span style=\"color: rgb(202, 104, 104); line-height: normal;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; [UIApplication sharedApplication].keyWindow.frame.size.height*2)];</span><br></li><li><span style=\"color: rgb(202, 104, 104); line-height: normal;\">&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</span><br></li><li><span style=\"color: rgb(202, 104, 104); line-height: normal;\">&nbsp; &nbsp; &nbsp; &nbsp; [self.redView autoPinEdgeToSuperviewEdge:ALEdgeTop withInset:50];</span><br></li><li><span style=\"color: rgb(202, 104, 104); line-height: normal;\">&nbsp; &nbsp; &nbsp; &nbsp; [self.redView autoAlignAxisToSuperviewAxis:ALAxisVertical];</span><br></li><li><span style=\"color: rgb(202, 104, 104); line-height: normal;\">&nbsp; &nbsp; &nbsp; &nbsp; [self.redView autoSetDimensionsToSize:CGSizeMake(200, 200)];</span><br></li><li><span style=\"color: rgb(202, 104, 104); line-height: normal;\">&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</span><br></li><li><span style=\"color: rgb(202, 104, 104); line-height: normal;\">&nbsp; &nbsp; &nbsp; &nbsp; [self.greedView autoPinEdgeToSuperviewEdge:ALEdgeBottom withInset:50];</span><br></li><li><span style=\"color: rgb(202, 104, 104); line-height: normal;\">&nbsp; &nbsp; &nbsp; &nbsp; [self.greedView autoAlignAxisToSuperviewAxis:ALAxisVertical];</span><br></li><li><span style=\"color: rgb(202, 104, 104); line-height: normal;\">&nbsp; &nbsp; &nbsp; &nbsp; [self.greedView autoSetDimensionsToSize:CGSizeMake(200, 200)];</span><br></li></ol>","selected":false}],"z":0,"impScale":3,"rotateX":0,"rotateY":0,"rotateZ":0,"index":24,"selected":false,"active":false,"x":6900,"y":1300},{"components":[{"TextBox":{},"x":219,"y":7,"scale":{"x":1,"y":1},"type":"TextBox","size":48,"text":"<font color=\"#ffffff\">Visual Formart Language VFL</font><br>","selected":false},{"TextBox":{},"x":24,"y":605,"scale":{"x":1,"y":1},"type":"TextBox","size":24,"text":"<font color=\"#ffffff\"><a href=\"https://developer.apple.com/library/ios/documentation/UserExperience/Conceptual/AutolayoutPG/VisualFormatLanguage/VisualFormatLanguage.html#//apple_ref/doc/uid/TP40010853-CH3-SW1\" target=\"_blank\">Apple 参考</a></font><br>","selected":false},{"TextBox":{},"x":8,"y":137,"scale":{"x":1,"y":1},"type":"TextBox","size":24,"text":"<font color=\"#ffffff\">Standard Space<br></font><font color=\"#ca6868\">[button]-[textField]</font><br>","selected":false},{"src":"https://developer.apple.com/library/ios/documentation/UserExperience/Conceptual/AutolayoutPG/Art/standardSpace.png","type":"Image","x":280,"y":157,"scale":{"x":1,"y":1},"imageType":"PNG","selected":false},{"TextBox":{},"x":8,"y":245,"scale":{"x":1,"y":1},"type":"TextBox","size":24,"text":"<font color=\"#ffffff\">Width Constraint<br></font><font color=\"#ca6868\">[button(&gt;=50)]</font><br>","selected":false},{"src":"https://developer.apple.com/library/ios/documentation/UserExperience/Conceptual/AutolayoutPG/Art/widthConstraint.png","type":"Image","x":357,"y":263,"scale":{"x":1,"y":1},"imageType":"PNG","selected":false},{"TextBox":{},"x":8,"y":370,"scale":{"x":1,"y":1},"type":"TextBox","size":24,"text":"<font color=\"#ffffff\">Connection to Superview<br></font><font color=\"#ca6868\">|-50-[purpleBox]-50-|</font><br>","selected":false},{"src":"https://developer.apple.com/library/ios/documentation/UserExperience/Conceptual/AutolayoutPG/Art/connectionToSuperview.png","type":"Image","x":322,"y":381,"scale":{"x":1,"y":1},"imageType":"PNG","selected":false},{"TextBox":{},"x":8,"y":493,"scale":{"x":1,"y":1},"type":"TextBox","size":24,"text":"<font color=\"#ffffff\">Vertical Layout<br></font><font color=\"#ca6868\">V:[topField]-10-[bottomField]</font><br>","selected":false},{"src":"https://developer.apple.com/library/ios/documentation/UserExperience/Conceptual/AutolayoutPG/Art/verticalLayout.png","type":"Image","x":370,"y":507,"scale":{"x":1,"y":1},"imageType":"PNG","selected":false},{"TextBox":{},"x":548,"y":136,"scale":{"x":1,"y":1},"type":"TextBox","size":24,"text":"<font color=\"#ffffff\">Flush Views<br>[maroonView][blueView]</font><br>","selected":false},{"src":"https://developer.apple.com/library/ios/documentation/UserExperience/Conceptual/AutolayoutPG/Art/flushViews.png","type":"Image","x":864,"y":155,"scale":{"x":1,"y":1},"imageType":"PNG","selected":false},{"TextBox":{},"x":548,"y":233,"scale":{"x":1,"y":1},"type":"TextBox","size":24,"text":"<font color=\"#ffffff\">Priority<br></font><font color=\"#ca6868\">[button(100@20)]</font><br>","selected":false},{"src":"https://developer.apple.com/library/ios/documentation/UserExperience/Conceptual/AutolayoutPG/Art/priority.png","type":"Image","x":874,"y":237,"scale":{"x":1,"y":1},"imageType":"PNG","selected":false},{"TextBox":{},"x":549,"y":361,"scale":{"x":1,"y":1},"type":"TextBox","size":24,"text":"<font color=\"#ffffff\">Equal Widths<br></font><font color=\"#ca6868\">[button1(==button2)]</font><br>","selected":false},{"src":"https://developer.apple.com/library/ios/documentation/UserExperience/Conceptual/AutolayoutPG/Art/equalWidths.png","type":"Image","x":847,"y":367,"scale":{"x":1,"y":1},"imageType":"PNG","selected":false},{"TextBox":{},"x":549,"y":491,"scale":{"x":1,"y":1},"type":"TextBox","size":24,"text":"<font color=\"#ffffff\">Multiple Predicates<br></font><font color=\"#ca6868\">[flexibleButton(&gt;=70,&lt;=100)]</font><br>","selected":false},{"src":"https://developer.apple.com/library/ios/documentation/UserExperience/Conceptual/AutolayoutPG/Art/multiplePredicates.png","type":"Image","x":903,"y":486,"scale":{"x":1,"y":1},"imageType":"PNG","selected":false}],"z":0,"impScale":3,"rotateX":0,"rotateY":0,"rotateZ":0,"index":25,"selected":false,"active":false,"x":7180,"y":1300},{"components":[{"TextBox":{},"x":10,"y":85,"scale":{"x":1,"y":1},"type":"TextBox","size":36,"text":"<ul><li><font color=\"#ffffff\" face=\"Lato\"><span style=\"line-height: normal;\">AutoLayout 性能</span></font></li></ul>","selected":false},{"TextBox":{},"x":219,"y":7,"scale":{"x":1,"y":1},"type":"TextBox","size":48,"text":"<font color=\"#ffffff\">Auto Layout Basic Concepts</font><br>","selected":false},{"TextBox":{},"x":47,"y":147,"scale":{"x":1,"y":1},"type":"TextBox","size":24,"text":"<font color=\"#ffffff\">自动布局是布局过程中额外的一个步骤。它需要一组约束条件，并把这些约束条件转换成<br>&nbsp;frame。因此这自然会产生一些性能的影响。<br>在绝大数情况下，用来解决约束条件系统的时间是可以忽略不计的<br><br>但是如果你正好在处理一些性能关键的视图代码时，最好还是对这一点有所了解。<br><br>当你一次显示大量视图时可能会有性能问题。将约束条件转换成视图的 frame 时，用来计算<br>约束的算法是超线性复杂的。这意味着当有一定数量的视图时，性能将会变得非常低下。<br>可以参考<a href=\"http://pilky.me/36/\n\" target=\"_blank\">这篇文章</a><br></font><br><font color=\"#ffffff\">这些都是极端的情况，不要过早的优化，并且避免自动布局潜在的性能影响。</font><br>","selected":false},{"TextBox":{},"x":10,"y":508,"scale":{"x":1,"y":1},"type":"TextBox","size":36,"text":"<ul><li><font color=\"#ffffff\" face=\"Lato\"><span style=\"line-height: normal;\">AutoLayout &nbsp;第三方框架</span></font></li></ul>","selected":false},{"TextBox":{},"x":46,"y":570,"scale":{"x":1,"y":1},"type":"TextBox","size":24,"text":"<ul><li><span style=\"color: rgb(202, 104, 104); line-height: normal;\"><a href=\"https://github.com/SnapKit/Masonry.git\" target=\"_blank\">Masonry</a> &nbsp; &nbsp; &nbsp; &nbsp;</span><br></li><li><span style=\"color: rgb(202, 104, 104); line-height: normal;\"><a href=\"https://github.com/smileyborg/PureLayout.git\" target=\"_blank\">PureLayout</a> &nbsp;</span><br></li><li><span style=\"color: rgb(202, 104, 104); line-height: normal;\">FLKAutoLayout</span><br></li><li><span style=\"color: rgb(202, 104, 104); line-height: normal;\">KeepLayout</span><br></li></ul>","selected":false}],"z":0,"impScale":3,"rotateX":0,"rotateY":0,"rotateZ":0,"index":26,"selected":false,"active":false,"x":7460,"y":1300},{"components":[{"TextBox":{},"x":219,"y":7,"scale":{"x":1,"y":1},"type":"TextBox","size":48,"text":"<font color=\"#ffffff\">Auto Layout Basic Concepts</font><br>","selected":false},{"TextBox":{},"x":10,"y":84,"scale":{"x":1,"y":1},"type":"TextBox","size":36,"text":"<ul><li><font color=\"#ffffff\" face=\"Lato\"><span style=\"line-height: normal;\">AutoLayout 存在的问题</span></font></li></ul>","selected":false},{"TextBox":{},"x":61,"y":235,"scale":{"x":1,"y":1},"type":"TextBox","size":16,"text":"<br><font color=\"#ffffff\">针对iOS 7.1，需要设置contentView的bounds,在添加约束之前设置，可以在updateConstraints中添加<br></font><br><ol><li><font color=\"#ca6868\"><span style=\"line-height: normal;\">- (void)updateConstraints</span></font></li><li><font color=\"#ca6868\"><span style=\"line-height: normal;\">{</span></font></li><li><font color=\"#ca6868\"><span style=\"line-height: normal;\">&nbsp; &nbsp;&nbsp;</span></font></li><li><font color=\"#ca6868\"><span style=\"line-height: normal;\">&nbsp; &nbsp; if (!self.isDidUpdateContraints)</span></font></li><li><font color=\"#ca6868\"><span style=\"line-height: normal;\">&nbsp; &nbsp; {</span></font></li><li><font color=\"#ca6868\"><span style=\"line-height: normal;\">&nbsp; &nbsp; &nbsp; &nbsp; self.contentView.bounds = CGRectMake(0, 0, 99999, 99999);</span></font></li><li><font color=\"#ca6868\"><span style=\"line-height: normal;\">&nbsp; &nbsp; &nbsp; &nbsp;//添加约束</span></font></li><li><font color=\"#ca6868\"><span style=\"line-height: normal;\">&nbsp; &nbsp; }</span></font></li><li><font color=\"#ca6868\"><span style=\"line-height: normal;\">&nbsp; &nbsp;[super updateCOnstraints];</span></font></li><li><font color=\"#ca6868\"><span style=\"line-height: normal;\">｝</span></font></li><li><span style=\"line-height: normal;\"><font color=\"#ca6868\">&nbsp; &nbsp;</font></span><br></li></ol>","selected":false},{"TextBox":{},"x":47,"y":550,"scale":{"x":1,"y":1},"type":"TextBox","size":24,"text":"<font color=\"#ca6868\"><a href=\"http://stackoverflow.com/questions/19132908/auto-layout-constraints-issue-on-ios7-in-uitableviewcell\" target=\"_blank\">auto-layout-constraints-issue-on-ios7-in-uitableviewcell</a></font>","selected":false},{"TextBox":{},"x":40,"y":151,"scale":{"x":1,"y":1},"type":"TextBox","size":24,"text":"<ol><li><span style=\"color: rgb(255, 255, 255); line-height: normal;\">使用 iOS 8 SDK时，在iOS 7.1 之前和iOS 8.0之后的 UITableViewCell and&nbsp;</span></li></ol><span style=\"color: rgb(255, 255, 255);\">UICollectionViewCell问题</span><br><br>","selected":false},{"TextBox":{},"x":48,"y":602,"scale":{"x":1,"y":1},"type":"TextBox","size":24,"text":"<font color=\"#ca6868\"><a href=\"http://stackoverflow.com/questions/18065938/how-to-use-auto-layout-to-move-other-views-when-a-view-is-hidden/18066138#18066138\" target=\"_blank\">how-to-use-auto-layout-to-move-other-views-when-a-view-is-hidden</a></font>","selected":false}],"z":0,"impScale":3,"rotateX":0,"rotateY":0,"rotateZ":0,"index":27,"selected":false,"active":false,"x":7740,"y":1300},{"components":[{"TextBox":{},"x":232,"y":356,"scale":{"x":1,"y":1},"type":"TextBox","size":48,"text":"<font color=\"#ffffff\">Ask Question &amp; Discussion</font><br>","selected":false}],"z":0,"impScale":3,"rotateX":0,"rotateY":0,"rotateZ":0,"index":28,"selected":false,"active":false,"x":8020,"y":1300}],"background":"bg-custom-000000","activeSlide":{"components":[{"TextBox":{},"x":85,"y":336,"scale":{"x":1,"y":1},"type":"TextBox","text":"<font color=\"#eeeeee\" face=\"Abril Fatface, cursive\">Coding With Auto Layout &nbsp;</font><br>","size":72,"selected":false},{"TextBox":{},"x":802,"y":697,"scale":{"x":1,"y":1},"type":"TextBox","text":"<font color=\"#eeeeee\">zhil.shi 2015.6.12</font><br>","size":22,"selected":false}],"z":0,"impScale":3,"rotateX":0,"rotateY":0,"rotateZ":0,"index":0,"selected":false,"active":true,"x":180,"y":180,"background":"bg-transparent","markdown":"","surface":"bg-custom-000000"},"fileName":"Auto Latest.strut","surface":"bg-custom-000000","deckVersion":"1.0","cannedTransition":"carousel","customBackgrounds":{"bgs":[{"klass":"bg-custom-000000","style":"#000000"},{"klass":"bg-custom-000000","style":"#000000"},{"klass":"bg-custom-070707","style":"#070707"},{"klass":"bg-custom-040404","style":"#040404"},{"klass":"bg-custom-040404","style":"#040404"},{"klass":"bg-custom-000000","style":"#000000"},{"klass":"bg-custom-000000","style":"#000000"},{"klass":"bg-custom-030303","style":"#030303"},{"klass":"bg-custom-000000","style":"#000000"},{"klass":"bg-custom-000000","style":"#000000"},{"klass":"bg-custom-000000","style":"#000000"}]},"overviewX":4100,"overviewY":740}